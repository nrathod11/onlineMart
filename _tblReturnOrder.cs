
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace BusinessLayer
{
	public abstract class _tblReturnOrder : SqlClientEntity
	{
		public _tblReturnOrder()
		{
			this.QuerySource = "tblReturnOrder";
			this.MappingName = "tblReturnOrder";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblReturnOrderLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int AppReturnOrderID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.AppReturnOrderID, AppReturnOrderID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblReturnOrderLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter AppReturnOrderID
			{
				get
				{
					return new SqlParameter("@AppReturnOrderID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppOrderID
			{
				get
				{
					return new SqlParameter("@AppOrderID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppReason
			{
				get
				{
					return new SqlParameter("@AppReason", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppNote
			{
				get
				{
					return new SqlParameter("@AppNote", SqlDbType.VarChar, 2147483647);
				}
			}
			
			public static SqlParameter AppRequestedDate
			{
				get
				{
					return new SqlParameter("@AppRequestedDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppReturnStatus
			{
				get
				{
					return new SqlParameter("@AppReturnStatus", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppCourierCompanyID
			{
				get
				{
					return new SqlParameter("@AppCourierCompanyID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppDocketNo
			{
				get
				{
					return new SqlParameter("@AppDocketNo", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppPickupName
			{
				get
				{
					return new SqlParameter("@AppPickupName", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppPickupAddress
			{
				get
				{
					return new SqlParameter("@AppPickupAddress", SqlDbType.VarChar, 2147483647);
				}
			}
			
			public static SqlParameter AppPickupContactNo1
			{
				get
				{
					return new SqlParameter("@AppPickupContactNo1", SqlDbType.VarChar, 15);
				}
			}
			
			public static SqlParameter AppPickupContactNo2
			{
				get
				{
					return new SqlParameter("@AppPickupContactNo2", SqlDbType.VarChar, 15);
				}
			}
			
			public static SqlParameter AppPickupPIN
			{
				get
				{
					return new SqlParameter("@AppPickupPIN", SqlDbType.VarChar, 6);
				}
			}
			
			public static SqlParameter AppPreferedTime
			{
				get
				{
					return new SqlParameter("@AppPreferedTime", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppDropName
			{
				get
				{
					return new SqlParameter("@AppDropName", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppDropAddress
			{
				get
				{
					return new SqlParameter("@AppDropAddress", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppDropContactNo1
			{
				get
				{
					return new SqlParameter("@AppDropContactNo1", SqlDbType.VarChar, 15);
				}
			}
			
			public static SqlParameter AppDropContactNo2
			{
				get
				{
					return new SqlParameter("@AppDropContactNo2", SqlDbType.VarChar, 15);
				}
			}
			
			public static SqlParameter AppDropPIN
			{
				get
				{
					return new SqlParameter("@AppDropPIN", SqlDbType.VarChar, 6);
				}
			}
			
			public static SqlParameter AppPreviousSubOrderStatus
			{
				get
				{
					return new SqlParameter("@AppPreviousSubOrderStatus", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppCourierCompanyContactNo
			{
				get
				{
					return new SqlParameter("@AppCourierCompanyContactNo", SqlDbType.VarChar, 15);
				}
			}
			
			public static SqlParameter AppCourierCompanyWebsite
			{
				get
				{
					return new SqlParameter("@AppCourierCompanyWebsite", SqlDbType.VarChar, 500);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string AppReturnOrderID = "appReturnOrderID";
            public const string AppOrderID = "appOrderID";
            public const string AppReason = "appReason";
            public const string AppNote = "appNote";
            public const string AppRequestedDate = "appRequestedDate";
            public const string AppReturnStatus = "appReturnStatus";
            public const string AppCourierCompanyID = "appCourierCompanyID";
            public const string AppDocketNo = "appDocketNo";
            public const string AppPickupName = "appPickupName";
            public const string AppPickupAddress = "appPickupAddress";
            public const string AppPickupContactNo1 = "appPickupContactNo1";
            public const string AppPickupContactNo2 = "appPickupContactNo2";
            public const string AppPickupPIN = "appPickupPIN";
            public const string AppPreferedTime = "appPreferedTime";
            public const string AppDropName = "appDropName";
            public const string AppDropAddress = "appDropAddress";
            public const string AppDropContactNo1 = "appDropContactNo1";
            public const string AppDropContactNo2 = "appDropContactNo2";
            public const string AppDropPIN = "appDropPIN";
            public const string AppPreviousSubOrderStatus = "appPreviousSubOrderStatus";
            public const string AppCourierCompanyContactNo = "appCourierCompanyContactNo";
            public const string AppCourierCompanyWebsite = "appCourierCompanyWebsite";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppReturnOrderID] = _tblReturnOrder.PropertyNames.AppReturnOrderID;
					ht[AppOrderID] = _tblReturnOrder.PropertyNames.AppOrderID;
					ht[AppReason] = _tblReturnOrder.PropertyNames.AppReason;
					ht[AppNote] = _tblReturnOrder.PropertyNames.AppNote;
					ht[AppRequestedDate] = _tblReturnOrder.PropertyNames.AppRequestedDate;
					ht[AppReturnStatus] = _tblReturnOrder.PropertyNames.AppReturnStatus;
					ht[AppCourierCompanyID] = _tblReturnOrder.PropertyNames.AppCourierCompanyID;
					ht[AppDocketNo] = _tblReturnOrder.PropertyNames.AppDocketNo;
					ht[AppPickupName] = _tblReturnOrder.PropertyNames.AppPickupName;
					ht[AppPickupAddress] = _tblReturnOrder.PropertyNames.AppPickupAddress;
					ht[AppPickupContactNo1] = _tblReturnOrder.PropertyNames.AppPickupContactNo1;
					ht[AppPickupContactNo2] = _tblReturnOrder.PropertyNames.AppPickupContactNo2;
					ht[AppPickupPIN] = _tblReturnOrder.PropertyNames.AppPickupPIN;
					ht[AppPreferedTime] = _tblReturnOrder.PropertyNames.AppPreferedTime;
					ht[AppDropName] = _tblReturnOrder.PropertyNames.AppDropName;
					ht[AppDropAddress] = _tblReturnOrder.PropertyNames.AppDropAddress;
					ht[AppDropContactNo1] = _tblReturnOrder.PropertyNames.AppDropContactNo1;
					ht[AppDropContactNo2] = _tblReturnOrder.PropertyNames.AppDropContactNo2;
					ht[AppDropPIN] = _tblReturnOrder.PropertyNames.AppDropPIN;
					ht[AppPreviousSubOrderStatus] = _tblReturnOrder.PropertyNames.AppPreviousSubOrderStatus;
					ht[AppCourierCompanyContactNo] = _tblReturnOrder.PropertyNames.AppCourierCompanyContactNo;
					ht[AppCourierCompanyWebsite] = _tblReturnOrder.PropertyNames.AppCourierCompanyWebsite;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string AppReturnOrderID = "AppReturnOrderID";
            public const string AppOrderID = "AppOrderID";
            public const string AppReason = "AppReason";
            public const string AppNote = "AppNote";
            public const string AppRequestedDate = "AppRequestedDate";
            public const string AppReturnStatus = "AppReturnStatus";
            public const string AppCourierCompanyID = "AppCourierCompanyID";
            public const string AppDocketNo = "AppDocketNo";
            public const string AppPickupName = "AppPickupName";
            public const string AppPickupAddress = "AppPickupAddress";
            public const string AppPickupContactNo1 = "AppPickupContactNo1";
            public const string AppPickupContactNo2 = "AppPickupContactNo2";
            public const string AppPickupPIN = "AppPickupPIN";
            public const string AppPreferedTime = "AppPreferedTime";
            public const string AppDropName = "AppDropName";
            public const string AppDropAddress = "AppDropAddress";
            public const string AppDropContactNo1 = "AppDropContactNo1";
            public const string AppDropContactNo2 = "AppDropContactNo2";
            public const string AppDropPIN = "AppDropPIN";
            public const string AppPreviousSubOrderStatus = "AppPreviousSubOrderStatus";
            public const string AppCourierCompanyContactNo = "AppCourierCompanyContactNo";
            public const string AppCourierCompanyWebsite = "AppCourierCompanyWebsite";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppReturnOrderID] = _tblReturnOrder.ColumnNames.AppReturnOrderID;
					ht[AppOrderID] = _tblReturnOrder.ColumnNames.AppOrderID;
					ht[AppReason] = _tblReturnOrder.ColumnNames.AppReason;
					ht[AppNote] = _tblReturnOrder.ColumnNames.AppNote;
					ht[AppRequestedDate] = _tblReturnOrder.ColumnNames.AppRequestedDate;
					ht[AppReturnStatus] = _tblReturnOrder.ColumnNames.AppReturnStatus;
					ht[AppCourierCompanyID] = _tblReturnOrder.ColumnNames.AppCourierCompanyID;
					ht[AppDocketNo] = _tblReturnOrder.ColumnNames.AppDocketNo;
					ht[AppPickupName] = _tblReturnOrder.ColumnNames.AppPickupName;
					ht[AppPickupAddress] = _tblReturnOrder.ColumnNames.AppPickupAddress;
					ht[AppPickupContactNo1] = _tblReturnOrder.ColumnNames.AppPickupContactNo1;
					ht[AppPickupContactNo2] = _tblReturnOrder.ColumnNames.AppPickupContactNo2;
					ht[AppPickupPIN] = _tblReturnOrder.ColumnNames.AppPickupPIN;
					ht[AppPreferedTime] = _tblReturnOrder.ColumnNames.AppPreferedTime;
					ht[AppDropName] = _tblReturnOrder.ColumnNames.AppDropName;
					ht[AppDropAddress] = _tblReturnOrder.ColumnNames.AppDropAddress;
					ht[AppDropContactNo1] = _tblReturnOrder.ColumnNames.AppDropContactNo1;
					ht[AppDropContactNo2] = _tblReturnOrder.ColumnNames.AppDropContactNo2;
					ht[AppDropPIN] = _tblReturnOrder.ColumnNames.AppDropPIN;
					ht[AppPreviousSubOrderStatus] = _tblReturnOrder.ColumnNames.AppPreviousSubOrderStatus;
					ht[AppCourierCompanyContactNo] = _tblReturnOrder.ColumnNames.AppCourierCompanyContactNo;
					ht[AppCourierCompanyWebsite] = _tblReturnOrder.ColumnNames.AppCourierCompanyWebsite;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string AppReturnOrderID = "s_AppReturnOrderID";
            public const string AppOrderID = "s_AppOrderID";
            public const string AppReason = "s_AppReason";
            public const string AppNote = "s_AppNote";
            public const string AppRequestedDate = "s_AppRequestedDate";
            public const string AppReturnStatus = "s_AppReturnStatus";
            public const string AppCourierCompanyID = "s_AppCourierCompanyID";
            public const string AppDocketNo = "s_AppDocketNo";
            public const string AppPickupName = "s_AppPickupName";
            public const string AppPickupAddress = "s_AppPickupAddress";
            public const string AppPickupContactNo1 = "s_AppPickupContactNo1";
            public const string AppPickupContactNo2 = "s_AppPickupContactNo2";
            public const string AppPickupPIN = "s_AppPickupPIN";
            public const string AppPreferedTime = "s_AppPreferedTime";
            public const string AppDropName = "s_AppDropName";
            public const string AppDropAddress = "s_AppDropAddress";
            public const string AppDropContactNo1 = "s_AppDropContactNo1";
            public const string AppDropContactNo2 = "s_AppDropContactNo2";
            public const string AppDropPIN = "s_AppDropPIN";
            public const string AppPreviousSubOrderStatus = "s_AppPreviousSubOrderStatus";
            public const string AppCourierCompanyContactNo = "s_AppCourierCompanyContactNo";
            public const string AppCourierCompanyWebsite = "s_AppCourierCompanyWebsite";

		}
		#endregion		
		
		#region Properties
	
		public virtual int AppReturnOrderID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppReturnOrderID);
			}
			set
	        {
				base.Setint(ColumnNames.AppReturnOrderID, value);
			}
		}

		public virtual int AppOrderID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppOrderID);
			}
			set
	        {
				base.Setint(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string AppReason
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReason);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReason, value);
			}
		}

		public virtual string AppNote
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppNote);
			}
			set
	        {
				base.Setstring(ColumnNames.AppNote, value);
			}
		}

		public virtual DateTime AppRequestedDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppRequestedDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppRequestedDate, value);
			}
		}

		public virtual int AppReturnStatus
	    {
			get
	        {
				return base.Getint(ColumnNames.AppReturnStatus);
			}
			set
	        {
				base.Setint(ColumnNames.AppReturnStatus, value);
			}
		}

		public virtual int AppCourierCompanyID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppCourierCompanyID);
			}
			set
	        {
				base.Setint(ColumnNames.AppCourierCompanyID, value);
			}
		}

		public virtual string AppDocketNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDocketNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDocketNo, value);
			}
		}

		public virtual string AppPickupName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPickupName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPickupName, value);
			}
		}

		public virtual string AppPickupAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPickupAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPickupAddress, value);
			}
		}

		public virtual string AppPickupContactNo1
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPickupContactNo1);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPickupContactNo1, value);
			}
		}

		public virtual string AppPickupContactNo2
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPickupContactNo2);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPickupContactNo2, value);
			}
		}

		public virtual string AppPickupPIN
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPickupPIN);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPickupPIN, value);
			}
		}

		public virtual DateTime AppPreferedTime
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppPreferedTime);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppPreferedTime, value);
			}
		}

		public virtual string AppDropName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDropName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDropName, value);
			}
		}

		public virtual string AppDropAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDropAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDropAddress, value);
			}
		}

		public virtual string AppDropContactNo1
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDropContactNo1);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDropContactNo1, value);
			}
		}

		public virtual string AppDropContactNo2
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDropContactNo2);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDropContactNo2, value);
			}
		}

		public virtual string AppDropPIN
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDropPIN);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDropPIN, value);
			}
		}

		public virtual int AppPreviousSubOrderStatus
	    {
			get
	        {
				return base.Getint(ColumnNames.AppPreviousSubOrderStatus);
			}
			set
	        {
				base.Setint(ColumnNames.AppPreviousSubOrderStatus, value);
			}
		}

		public virtual string AppCourierCompanyContactNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppCourierCompanyContactNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppCourierCompanyContactNo, value);
			}
		}

		public virtual string AppCourierCompanyWebsite
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppCourierCompanyWebsite);
			}
			set
	        {
				base.Setstring(ColumnNames.AppCourierCompanyWebsite, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_AppReturnOrderID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReturnOrderID) ? string.Empty : base.GetintAsString(ColumnNames.AppReturnOrderID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReturnOrderID);
				else
					this.AppReturnOrderID = base.SetintAsString(ColumnNames.AppReturnOrderID, value);
			}
		}

		public virtual string s_AppOrderID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderID) ? string.Empty : base.GetintAsString(ColumnNames.AppOrderID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderID);
				else
					this.AppOrderID = base.SetintAsString(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string s_AppReason
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReason) ? string.Empty : base.GetstringAsString(ColumnNames.AppReason);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReason);
				else
					this.AppReason = base.SetstringAsString(ColumnNames.AppReason, value);
			}
		}

		public virtual string s_AppNote
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppNote) ? string.Empty : base.GetstringAsString(ColumnNames.AppNote);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppNote);
				else
					this.AppNote = base.SetstringAsString(ColumnNames.AppNote, value);
			}
		}

		public virtual string s_AppRequestedDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppRequestedDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppRequestedDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppRequestedDate);
				else
					this.AppRequestedDate = base.SetDateTimeAsString(ColumnNames.AppRequestedDate, value);
			}
		}

		public virtual string s_AppReturnStatus
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReturnStatus) ? string.Empty : base.GetintAsString(ColumnNames.AppReturnStatus);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReturnStatus);
				else
					this.AppReturnStatus = base.SetintAsString(ColumnNames.AppReturnStatus, value);
			}
		}

		public virtual string s_AppCourierCompanyID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCourierCompanyID) ? string.Empty : base.GetintAsString(ColumnNames.AppCourierCompanyID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCourierCompanyID);
				else
					this.AppCourierCompanyID = base.SetintAsString(ColumnNames.AppCourierCompanyID, value);
			}
		}

		public virtual string s_AppDocketNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDocketNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppDocketNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDocketNo);
				else
					this.AppDocketNo = base.SetstringAsString(ColumnNames.AppDocketNo, value);
			}
		}

		public virtual string s_AppPickupName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPickupName) ? string.Empty : base.GetstringAsString(ColumnNames.AppPickupName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPickupName);
				else
					this.AppPickupName = base.SetstringAsString(ColumnNames.AppPickupName, value);
			}
		}

		public virtual string s_AppPickupAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPickupAddress) ? string.Empty : base.GetstringAsString(ColumnNames.AppPickupAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPickupAddress);
				else
					this.AppPickupAddress = base.SetstringAsString(ColumnNames.AppPickupAddress, value);
			}
		}

		public virtual string s_AppPickupContactNo1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPickupContactNo1) ? string.Empty : base.GetstringAsString(ColumnNames.AppPickupContactNo1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPickupContactNo1);
				else
					this.AppPickupContactNo1 = base.SetstringAsString(ColumnNames.AppPickupContactNo1, value);
			}
		}

		public virtual string s_AppPickupContactNo2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPickupContactNo2) ? string.Empty : base.GetstringAsString(ColumnNames.AppPickupContactNo2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPickupContactNo2);
				else
					this.AppPickupContactNo2 = base.SetstringAsString(ColumnNames.AppPickupContactNo2, value);
			}
		}

		public virtual string s_AppPickupPIN
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPickupPIN) ? string.Empty : base.GetstringAsString(ColumnNames.AppPickupPIN);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPickupPIN);
				else
					this.AppPickupPIN = base.SetstringAsString(ColumnNames.AppPickupPIN, value);
			}
		}

		public virtual string s_AppPreferedTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPreferedTime) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppPreferedTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPreferedTime);
				else
					this.AppPreferedTime = base.SetDateTimeAsString(ColumnNames.AppPreferedTime, value);
			}
		}

		public virtual string s_AppDropName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDropName) ? string.Empty : base.GetstringAsString(ColumnNames.AppDropName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDropName);
				else
					this.AppDropName = base.SetstringAsString(ColumnNames.AppDropName, value);
			}
		}

		public virtual string s_AppDropAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDropAddress) ? string.Empty : base.GetstringAsString(ColumnNames.AppDropAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDropAddress);
				else
					this.AppDropAddress = base.SetstringAsString(ColumnNames.AppDropAddress, value);
			}
		}

		public virtual string s_AppDropContactNo1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDropContactNo1) ? string.Empty : base.GetstringAsString(ColumnNames.AppDropContactNo1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDropContactNo1);
				else
					this.AppDropContactNo1 = base.SetstringAsString(ColumnNames.AppDropContactNo1, value);
			}
		}

		public virtual string s_AppDropContactNo2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDropContactNo2) ? string.Empty : base.GetstringAsString(ColumnNames.AppDropContactNo2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDropContactNo2);
				else
					this.AppDropContactNo2 = base.SetstringAsString(ColumnNames.AppDropContactNo2, value);
			}
		}

		public virtual string s_AppDropPIN
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDropPIN) ? string.Empty : base.GetstringAsString(ColumnNames.AppDropPIN);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDropPIN);
				else
					this.AppDropPIN = base.SetstringAsString(ColumnNames.AppDropPIN, value);
			}
		}

		public virtual string s_AppPreviousSubOrderStatus
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPreviousSubOrderStatus) ? string.Empty : base.GetintAsString(ColumnNames.AppPreviousSubOrderStatus);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPreviousSubOrderStatus);
				else
					this.AppPreviousSubOrderStatus = base.SetintAsString(ColumnNames.AppPreviousSubOrderStatus, value);
			}
		}

		public virtual string s_AppCourierCompanyContactNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCourierCompanyContactNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppCourierCompanyContactNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCourierCompanyContactNo);
				else
					this.AppCourierCompanyContactNo = base.SetstringAsString(ColumnNames.AppCourierCompanyContactNo, value);
			}
		}

		public virtual string s_AppCourierCompanyWebsite
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCourierCompanyWebsite) ? string.Empty : base.GetstringAsString(ColumnNames.AppCourierCompanyWebsite);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCourierCompanyWebsite);
				else
					this.AppCourierCompanyWebsite = base.SetstringAsString(ColumnNames.AppCourierCompanyWebsite, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter AppReturnOrderID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReturnOrderID, Parameters.AppReturnOrderID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReason
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReason, Parameters.AppReason);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppNote
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppNote, Parameters.AppNote);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppRequestedDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppRequestedDate, Parameters.AppRequestedDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReturnStatus
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReturnStatus, Parameters.AppReturnStatus);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCourierCompanyID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCourierCompanyID, Parameters.AppCourierCompanyID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDocketNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDocketNo, Parameters.AppDocketNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPickupName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPickupName, Parameters.AppPickupName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPickupAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPickupAddress, Parameters.AppPickupAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPickupContactNo1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPickupContactNo1, Parameters.AppPickupContactNo1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPickupContactNo2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPickupContactNo2, Parameters.AppPickupContactNo2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPickupPIN
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPickupPIN, Parameters.AppPickupPIN);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPreferedTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPreferedTime, Parameters.AppPreferedTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDropName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDropName, Parameters.AppDropName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDropAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDropAddress, Parameters.AppDropAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDropContactNo1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDropContactNo1, Parameters.AppDropContactNo1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDropContactNo2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDropContactNo2, Parameters.AppDropContactNo2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDropPIN
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDropPIN, Parameters.AppDropPIN);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPreviousSubOrderStatus
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPreviousSubOrderStatus, Parameters.AppPreviousSubOrderStatus);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCourierCompanyContactNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCourierCompanyContactNo, Parameters.AppCourierCompanyContactNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCourierCompanyWebsite
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCourierCompanyWebsite, Parameters.AppCourierCompanyWebsite);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter AppReturnOrderID
		    {
				get
		        {
					if(_AppReturnOrderID_W == null)
	        	    {
						_AppReturnOrderID_W = TearOff.AppReturnOrderID;
					}
					return _AppReturnOrderID_W;
				}
			}

			public WhereParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public WhereParameter AppReason
		    {
				get
		        {
					if(_AppReason_W == null)
	        	    {
						_AppReason_W = TearOff.AppReason;
					}
					return _AppReason_W;
				}
			}

			public WhereParameter AppNote
		    {
				get
		        {
					if(_AppNote_W == null)
	        	    {
						_AppNote_W = TearOff.AppNote;
					}
					return _AppNote_W;
				}
			}

			public WhereParameter AppRequestedDate
		    {
				get
		        {
					if(_AppRequestedDate_W == null)
	        	    {
						_AppRequestedDate_W = TearOff.AppRequestedDate;
					}
					return _AppRequestedDate_W;
				}
			}

			public WhereParameter AppReturnStatus
		    {
				get
		        {
					if(_AppReturnStatus_W == null)
	        	    {
						_AppReturnStatus_W = TearOff.AppReturnStatus;
					}
					return _AppReturnStatus_W;
				}
			}

			public WhereParameter AppCourierCompanyID
		    {
				get
		        {
					if(_AppCourierCompanyID_W == null)
	        	    {
						_AppCourierCompanyID_W = TearOff.AppCourierCompanyID;
					}
					return _AppCourierCompanyID_W;
				}
			}

			public WhereParameter AppDocketNo
		    {
				get
		        {
					if(_AppDocketNo_W == null)
	        	    {
						_AppDocketNo_W = TearOff.AppDocketNo;
					}
					return _AppDocketNo_W;
				}
			}

			public WhereParameter AppPickupName
		    {
				get
		        {
					if(_AppPickupName_W == null)
	        	    {
						_AppPickupName_W = TearOff.AppPickupName;
					}
					return _AppPickupName_W;
				}
			}

			public WhereParameter AppPickupAddress
		    {
				get
		        {
					if(_AppPickupAddress_W == null)
	        	    {
						_AppPickupAddress_W = TearOff.AppPickupAddress;
					}
					return _AppPickupAddress_W;
				}
			}

			public WhereParameter AppPickupContactNo1
		    {
				get
		        {
					if(_AppPickupContactNo1_W == null)
	        	    {
						_AppPickupContactNo1_W = TearOff.AppPickupContactNo1;
					}
					return _AppPickupContactNo1_W;
				}
			}

			public WhereParameter AppPickupContactNo2
		    {
				get
		        {
					if(_AppPickupContactNo2_W == null)
	        	    {
						_AppPickupContactNo2_W = TearOff.AppPickupContactNo2;
					}
					return _AppPickupContactNo2_W;
				}
			}

			public WhereParameter AppPickupPIN
		    {
				get
		        {
					if(_AppPickupPIN_W == null)
	        	    {
						_AppPickupPIN_W = TearOff.AppPickupPIN;
					}
					return _AppPickupPIN_W;
				}
			}

			public WhereParameter AppPreferedTime
		    {
				get
		        {
					if(_AppPreferedTime_W == null)
	        	    {
						_AppPreferedTime_W = TearOff.AppPreferedTime;
					}
					return _AppPreferedTime_W;
				}
			}

			public WhereParameter AppDropName
		    {
				get
		        {
					if(_AppDropName_W == null)
	        	    {
						_AppDropName_W = TearOff.AppDropName;
					}
					return _AppDropName_W;
				}
			}

			public WhereParameter AppDropAddress
		    {
				get
		        {
					if(_AppDropAddress_W == null)
	        	    {
						_AppDropAddress_W = TearOff.AppDropAddress;
					}
					return _AppDropAddress_W;
				}
			}

			public WhereParameter AppDropContactNo1
		    {
				get
		        {
					if(_AppDropContactNo1_W == null)
	        	    {
						_AppDropContactNo1_W = TearOff.AppDropContactNo1;
					}
					return _AppDropContactNo1_W;
				}
			}

			public WhereParameter AppDropContactNo2
		    {
				get
		        {
					if(_AppDropContactNo2_W == null)
	        	    {
						_AppDropContactNo2_W = TearOff.AppDropContactNo2;
					}
					return _AppDropContactNo2_W;
				}
			}

			public WhereParameter AppDropPIN
		    {
				get
		        {
					if(_AppDropPIN_W == null)
	        	    {
						_AppDropPIN_W = TearOff.AppDropPIN;
					}
					return _AppDropPIN_W;
				}
			}

			public WhereParameter AppPreviousSubOrderStatus
		    {
				get
		        {
					if(_AppPreviousSubOrderStatus_W == null)
	        	    {
						_AppPreviousSubOrderStatus_W = TearOff.AppPreviousSubOrderStatus;
					}
					return _AppPreviousSubOrderStatus_W;
				}
			}

			public WhereParameter AppCourierCompanyContactNo
		    {
				get
		        {
					if(_AppCourierCompanyContactNo_W == null)
	        	    {
						_AppCourierCompanyContactNo_W = TearOff.AppCourierCompanyContactNo;
					}
					return _AppCourierCompanyContactNo_W;
				}
			}

			public WhereParameter AppCourierCompanyWebsite
		    {
				get
		        {
					if(_AppCourierCompanyWebsite_W == null)
	        	    {
						_AppCourierCompanyWebsite_W = TearOff.AppCourierCompanyWebsite;
					}
					return _AppCourierCompanyWebsite_W;
				}
			}

			private WhereParameter _AppReturnOrderID_W = null;
			private WhereParameter _AppOrderID_W = null;
			private WhereParameter _AppReason_W = null;
			private WhereParameter _AppNote_W = null;
			private WhereParameter _AppRequestedDate_W = null;
			private WhereParameter _AppReturnStatus_W = null;
			private WhereParameter _AppCourierCompanyID_W = null;
			private WhereParameter _AppDocketNo_W = null;
			private WhereParameter _AppPickupName_W = null;
			private WhereParameter _AppPickupAddress_W = null;
			private WhereParameter _AppPickupContactNo1_W = null;
			private WhereParameter _AppPickupContactNo2_W = null;
			private WhereParameter _AppPickupPIN_W = null;
			private WhereParameter _AppPreferedTime_W = null;
			private WhereParameter _AppDropName_W = null;
			private WhereParameter _AppDropAddress_W = null;
			private WhereParameter _AppDropContactNo1_W = null;
			private WhereParameter _AppDropContactNo2_W = null;
			private WhereParameter _AppDropPIN_W = null;
			private WhereParameter _AppPreviousSubOrderStatus_W = null;
			private WhereParameter _AppCourierCompanyContactNo_W = null;
			private WhereParameter _AppCourierCompanyWebsite_W = null;

			public void WhereClauseReset()
			{
				_AppReturnOrderID_W = null;
				_AppOrderID_W = null;
				_AppReason_W = null;
				_AppNote_W = null;
				_AppRequestedDate_W = null;
				_AppReturnStatus_W = null;
				_AppCourierCompanyID_W = null;
				_AppDocketNo_W = null;
				_AppPickupName_W = null;
				_AppPickupAddress_W = null;
				_AppPickupContactNo1_W = null;
				_AppPickupContactNo2_W = null;
				_AppPickupPIN_W = null;
				_AppPreferedTime_W = null;
				_AppDropName_W = null;
				_AppDropAddress_W = null;
				_AppDropContactNo1_W = null;
				_AppDropContactNo2_W = null;
				_AppDropPIN_W = null;
				_AppPreviousSubOrderStatus_W = null;
				_AppCourierCompanyContactNo_W = null;
				_AppCourierCompanyWebsite_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter AppReturnOrderID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReturnOrderID, Parameters.AppReturnOrderID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReason
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReason, Parameters.AppReason);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppNote
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppNote, Parameters.AppNote);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppRequestedDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppRequestedDate, Parameters.AppRequestedDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReturnStatus
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReturnStatus, Parameters.AppReturnStatus);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCourierCompanyID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCourierCompanyID, Parameters.AppCourierCompanyID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDocketNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDocketNo, Parameters.AppDocketNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPickupName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPickupName, Parameters.AppPickupName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPickupAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPickupAddress, Parameters.AppPickupAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPickupContactNo1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPickupContactNo1, Parameters.AppPickupContactNo1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPickupContactNo2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPickupContactNo2, Parameters.AppPickupContactNo2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPickupPIN
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPickupPIN, Parameters.AppPickupPIN);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPreferedTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPreferedTime, Parameters.AppPreferedTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDropName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDropName, Parameters.AppDropName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDropAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDropAddress, Parameters.AppDropAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDropContactNo1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDropContactNo1, Parameters.AppDropContactNo1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDropContactNo2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDropContactNo2, Parameters.AppDropContactNo2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDropPIN
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDropPIN, Parameters.AppDropPIN);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPreviousSubOrderStatus
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPreviousSubOrderStatus, Parameters.AppPreviousSubOrderStatus);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCourierCompanyContactNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCourierCompanyContactNo, Parameters.AppCourierCompanyContactNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCourierCompanyWebsite
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCourierCompanyWebsite, Parameters.AppCourierCompanyWebsite);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter AppReturnOrderID
		    {
				get
		        {
					if(_AppReturnOrderID_W == null)
	        	    {
						_AppReturnOrderID_W = TearOff.AppReturnOrderID;
					}
					return _AppReturnOrderID_W;
				}
			}

			public AggregateParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public AggregateParameter AppReason
		    {
				get
		        {
					if(_AppReason_W == null)
	        	    {
						_AppReason_W = TearOff.AppReason;
					}
					return _AppReason_W;
				}
			}

			public AggregateParameter AppNote
		    {
				get
		        {
					if(_AppNote_W == null)
	        	    {
						_AppNote_W = TearOff.AppNote;
					}
					return _AppNote_W;
				}
			}

			public AggregateParameter AppRequestedDate
		    {
				get
		        {
					if(_AppRequestedDate_W == null)
	        	    {
						_AppRequestedDate_W = TearOff.AppRequestedDate;
					}
					return _AppRequestedDate_W;
				}
			}

			public AggregateParameter AppReturnStatus
		    {
				get
		        {
					if(_AppReturnStatus_W == null)
	        	    {
						_AppReturnStatus_W = TearOff.AppReturnStatus;
					}
					return _AppReturnStatus_W;
				}
			}

			public AggregateParameter AppCourierCompanyID
		    {
				get
		        {
					if(_AppCourierCompanyID_W == null)
	        	    {
						_AppCourierCompanyID_W = TearOff.AppCourierCompanyID;
					}
					return _AppCourierCompanyID_W;
				}
			}

			public AggregateParameter AppDocketNo
		    {
				get
		        {
					if(_AppDocketNo_W == null)
	        	    {
						_AppDocketNo_W = TearOff.AppDocketNo;
					}
					return _AppDocketNo_W;
				}
			}

			public AggregateParameter AppPickupName
		    {
				get
		        {
					if(_AppPickupName_W == null)
	        	    {
						_AppPickupName_W = TearOff.AppPickupName;
					}
					return _AppPickupName_W;
				}
			}

			public AggregateParameter AppPickupAddress
		    {
				get
		        {
					if(_AppPickupAddress_W == null)
	        	    {
						_AppPickupAddress_W = TearOff.AppPickupAddress;
					}
					return _AppPickupAddress_W;
				}
			}

			public AggregateParameter AppPickupContactNo1
		    {
				get
		        {
					if(_AppPickupContactNo1_W == null)
	        	    {
						_AppPickupContactNo1_W = TearOff.AppPickupContactNo1;
					}
					return _AppPickupContactNo1_W;
				}
			}

			public AggregateParameter AppPickupContactNo2
		    {
				get
		        {
					if(_AppPickupContactNo2_W == null)
	        	    {
						_AppPickupContactNo2_W = TearOff.AppPickupContactNo2;
					}
					return _AppPickupContactNo2_W;
				}
			}

			public AggregateParameter AppPickupPIN
		    {
				get
		        {
					if(_AppPickupPIN_W == null)
	        	    {
						_AppPickupPIN_W = TearOff.AppPickupPIN;
					}
					return _AppPickupPIN_W;
				}
			}

			public AggregateParameter AppPreferedTime
		    {
				get
		        {
					if(_AppPreferedTime_W == null)
	        	    {
						_AppPreferedTime_W = TearOff.AppPreferedTime;
					}
					return _AppPreferedTime_W;
				}
			}

			public AggregateParameter AppDropName
		    {
				get
		        {
					if(_AppDropName_W == null)
	        	    {
						_AppDropName_W = TearOff.AppDropName;
					}
					return _AppDropName_W;
				}
			}

			public AggregateParameter AppDropAddress
		    {
				get
		        {
					if(_AppDropAddress_W == null)
	        	    {
						_AppDropAddress_W = TearOff.AppDropAddress;
					}
					return _AppDropAddress_W;
				}
			}

			public AggregateParameter AppDropContactNo1
		    {
				get
		        {
					if(_AppDropContactNo1_W == null)
	        	    {
						_AppDropContactNo1_W = TearOff.AppDropContactNo1;
					}
					return _AppDropContactNo1_W;
				}
			}

			public AggregateParameter AppDropContactNo2
		    {
				get
		        {
					if(_AppDropContactNo2_W == null)
	        	    {
						_AppDropContactNo2_W = TearOff.AppDropContactNo2;
					}
					return _AppDropContactNo2_W;
				}
			}

			public AggregateParameter AppDropPIN
		    {
				get
		        {
					if(_AppDropPIN_W == null)
	        	    {
						_AppDropPIN_W = TearOff.AppDropPIN;
					}
					return _AppDropPIN_W;
				}
			}

			public AggregateParameter AppPreviousSubOrderStatus
		    {
				get
		        {
					if(_AppPreviousSubOrderStatus_W == null)
	        	    {
						_AppPreviousSubOrderStatus_W = TearOff.AppPreviousSubOrderStatus;
					}
					return _AppPreviousSubOrderStatus_W;
				}
			}

			public AggregateParameter AppCourierCompanyContactNo
		    {
				get
		        {
					if(_AppCourierCompanyContactNo_W == null)
	        	    {
						_AppCourierCompanyContactNo_W = TearOff.AppCourierCompanyContactNo;
					}
					return _AppCourierCompanyContactNo_W;
				}
			}

			public AggregateParameter AppCourierCompanyWebsite
		    {
				get
		        {
					if(_AppCourierCompanyWebsite_W == null)
	        	    {
						_AppCourierCompanyWebsite_W = TearOff.AppCourierCompanyWebsite;
					}
					return _AppCourierCompanyWebsite_W;
				}
			}

			private AggregateParameter _AppReturnOrderID_W = null;
			private AggregateParameter _AppOrderID_W = null;
			private AggregateParameter _AppReason_W = null;
			private AggregateParameter _AppNote_W = null;
			private AggregateParameter _AppRequestedDate_W = null;
			private AggregateParameter _AppReturnStatus_W = null;
			private AggregateParameter _AppCourierCompanyID_W = null;
			private AggregateParameter _AppDocketNo_W = null;
			private AggregateParameter _AppPickupName_W = null;
			private AggregateParameter _AppPickupAddress_W = null;
			private AggregateParameter _AppPickupContactNo1_W = null;
			private AggregateParameter _AppPickupContactNo2_W = null;
			private AggregateParameter _AppPickupPIN_W = null;
			private AggregateParameter _AppPreferedTime_W = null;
			private AggregateParameter _AppDropName_W = null;
			private AggregateParameter _AppDropAddress_W = null;
			private AggregateParameter _AppDropContactNo1_W = null;
			private AggregateParameter _AppDropContactNo2_W = null;
			private AggregateParameter _AppDropPIN_W = null;
			private AggregateParameter _AppPreviousSubOrderStatus_W = null;
			private AggregateParameter _AppCourierCompanyContactNo_W = null;
			private AggregateParameter _AppCourierCompanyWebsite_W = null;

			public void AggregateClauseReset()
			{
				_AppReturnOrderID_W = null;
				_AppOrderID_W = null;
				_AppReason_W = null;
				_AppNote_W = null;
				_AppRequestedDate_W = null;
				_AppReturnStatus_W = null;
				_AppCourierCompanyID_W = null;
				_AppDocketNo_W = null;
				_AppPickupName_W = null;
				_AppPickupAddress_W = null;
				_AppPickupContactNo1_W = null;
				_AppPickupContactNo2_W = null;
				_AppPickupPIN_W = null;
				_AppPreferedTime_W = null;
				_AppDropName_W = null;
				_AppDropAddress_W = null;
				_AppDropContactNo1_W = null;
				_AppDropContactNo2_W = null;
				_AppDropPIN_W = null;
				_AppPreviousSubOrderStatus_W = null;
				_AppCourierCompanyContactNo_W = null;
				_AppCourierCompanyWebsite_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblReturnOrderInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.AppReturnOrderID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblReturnOrderUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblReturnOrderDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.AppReturnOrderID);
			p.SourceColumn = ColumnNames.AppReturnOrderID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.AppReturnOrderID);
			p.SourceColumn = ColumnNames.AppReturnOrderID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderID);
			p.SourceColumn = ColumnNames.AppOrderID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReason);
			p.SourceColumn = ColumnNames.AppReason;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppNote);
			p.SourceColumn = ColumnNames.AppNote;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppRequestedDate);
			p.SourceColumn = ColumnNames.AppRequestedDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReturnStatus);
			p.SourceColumn = ColumnNames.AppReturnStatus;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCourierCompanyID);
			p.SourceColumn = ColumnNames.AppCourierCompanyID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDocketNo);
			p.SourceColumn = ColumnNames.AppDocketNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPickupName);
			p.SourceColumn = ColumnNames.AppPickupName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPickupAddress);
			p.SourceColumn = ColumnNames.AppPickupAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPickupContactNo1);
			p.SourceColumn = ColumnNames.AppPickupContactNo1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPickupContactNo2);
			p.SourceColumn = ColumnNames.AppPickupContactNo2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPickupPIN);
			p.SourceColumn = ColumnNames.AppPickupPIN;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPreferedTime);
			p.SourceColumn = ColumnNames.AppPreferedTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDropName);
			p.SourceColumn = ColumnNames.AppDropName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDropAddress);
			p.SourceColumn = ColumnNames.AppDropAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDropContactNo1);
			p.SourceColumn = ColumnNames.AppDropContactNo1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDropContactNo2);
			p.SourceColumn = ColumnNames.AppDropContactNo2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDropPIN);
			p.SourceColumn = ColumnNames.AppDropPIN;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPreviousSubOrderStatus);
			p.SourceColumn = ColumnNames.AppPreviousSubOrderStatus;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCourierCompanyContactNo);
			p.SourceColumn = ColumnNames.AppCourierCompanyContactNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCourierCompanyWebsite);
			p.SourceColumn = ColumnNames.AppCourierCompanyWebsite;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
