
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace BusinessLayer
{
	public abstract class _tblSubOrder : SqlClientEntity
	{
		public _tblSubOrder()
		{
			this.QuerySource = "tblSubOrder";
			this.MappingName = "tblSubOrder";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblSubOrderLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int AppSubOrderID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.AppSubOrderID, AppSubOrderID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblSubOrderLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter AppSubOrderID
			{
				get
				{
					return new SqlParameter("@AppSubOrderID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppOrderID
			{
				get
				{
					return new SqlParameter("@AppOrderID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppSubOrderNo
			{
				get
				{
					return new SqlParameter("@AppSubOrderNo", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppSubOrderStatusID
			{
				get
				{
					return new SqlParameter("@AppSubOrderStatusID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppSubOrderChangeDate
			{
				get
				{
					return new SqlParameter("@AppSubOrderChangeDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppProductDetailID
			{
				get
				{
					return new SqlParameter("@AppProductDetailID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppQty
			{
				get
				{
					return new SqlParameter("@AppQty", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppCurrencyID
			{
				get
				{
					return new SqlParameter("@AppCurrencyID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppRate
			{
				get
				{
					return new SqlParameter("@AppRate", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppSellingPrice
			{
				get
				{
					return new SqlParameter("@AppSellingPrice", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppDiscount
			{
				get
				{
					return new SqlParameter("@AppDiscount", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppCourierCompanyID
			{
				get
				{
					return new SqlParameter("@AppCourierCompanyID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppDocketNo
			{
				get
				{
					return new SqlParameter("@AppDocketNo", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppMaxDispatchDate
			{
				get
				{
					return new SqlParameter("@AppMaxDispatchDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppShippedDate
			{
				get
				{
					return new SqlParameter("@AppShippedDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppShippedStatus
			{
				get
				{
					return new SqlParameter("@AppShippedStatus", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppCommision
			{
				get
				{
					return new SqlParameter("@AppCommision", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppCommisionRs
			{
				get
				{
					return new SqlParameter("@AppCommisionRs", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppServiceTax
			{
				get
				{
					return new SqlParameter("@AppServiceTax", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppServiceTaxRs
			{
				get
				{
					return new SqlParameter("@AppServiceTaxRs", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppFixedFee
			{
				get
				{
					return new SqlParameter("@AppFixedFee", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppIsPaid
			{
				get
				{
					return new SqlParameter("@AppIsPaid", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppManifestGenerated
			{
				get
				{
					return new SqlParameter("@AppManifestGenerated", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppManifestID
			{
				get
				{
					return new SqlParameter("@AppManifestID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppSelfCourier
			{
				get
				{
					return new SqlParameter("@AppSelfCourier", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppInvoiceGenerated
			{
				get
				{
					return new SqlParameter("@AppInvoiceGenerated", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppShippingCharges
			{
				get
				{
					return new SqlParameter("@AppShippingCharges", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppDispatchDate
			{
				get
				{
					return new SqlParameter("@AppDispatchDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppDeliveryDate
			{
				get
				{
					return new SqlParameter("@AppDeliveryDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppCODCharges
			{
				get
				{
					return new SqlParameter("@AppCODCharges", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppIsDisputeApprove
			{
				get
				{
					return new SqlParameter("@AppIsDisputeApprove", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppInvoiceURL
			{
				get
				{
					return new SqlParameter("@AppInvoiceURL", SqlDbType.VarChar, 1000);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string AppSubOrderID = "appSubOrderID";
            public const string AppOrderID = "appOrderID";
            public const string AppSubOrderNo = "appSubOrderNo";
            public const string AppSubOrderStatusID = "appSubOrderStatusID";
            public const string AppSubOrderChangeDate = "appSubOrderChangeDate";
            public const string AppProductDetailID = "appProductDetailID";
            public const string AppQty = "appQty";
            public const string AppCurrencyID = "appCurrencyID";
            public const string AppRate = "appRate";
            public const string AppSellingPrice = "appSellingPrice";
            public const string AppDiscount = "appDiscount";
            public const string AppCourierCompanyID = "appCourierCompanyID";
            public const string AppDocketNo = "appDocketNo";
            public const string AppMaxDispatchDate = "appMaxDispatchDate";
            public const string AppShippedDate = "appShippedDate";
            public const string AppShippedStatus = "appShippedStatus";
            public const string AppCommision = "appCommision";
            public const string AppCommisionRs = "appCommisionRs";
            public const string AppServiceTax = "appServiceTax";
            public const string AppServiceTaxRs = "appServiceTaxRs";
            public const string AppFixedFee = "appFixedFee";
            public const string AppIsPaid = "appIsPaid";
            public const string AppManifestGenerated = "appManifestGenerated";
            public const string AppManifestID = "appManifestID";
            public const string AppSelfCourier = "appSelfCourier";
            public const string AppInvoiceGenerated = "appInvoiceGenerated";
            public const string AppShippingCharges = "appShippingCharges";
            public const string AppDispatchDate = "appDispatchDate";
            public const string AppDeliveryDate = "appDeliveryDate";
            public const string AppCODCharges = "appCODCharges";
            public const string AppIsDisputeApprove = "appIsDisputeApprove";
            public const string AppInvoiceURL = "appInvoiceURL";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppSubOrderID] = _tblSubOrder.PropertyNames.AppSubOrderID;
					ht[AppOrderID] = _tblSubOrder.PropertyNames.AppOrderID;
					ht[AppSubOrderNo] = _tblSubOrder.PropertyNames.AppSubOrderNo;
					ht[AppSubOrderStatusID] = _tblSubOrder.PropertyNames.AppSubOrderStatusID;
					ht[AppSubOrderChangeDate] = _tblSubOrder.PropertyNames.AppSubOrderChangeDate;
					ht[AppProductDetailID] = _tblSubOrder.PropertyNames.AppProductDetailID;
					ht[AppQty] = _tblSubOrder.PropertyNames.AppQty;
					ht[AppCurrencyID] = _tblSubOrder.PropertyNames.AppCurrencyID;
					ht[AppRate] = _tblSubOrder.PropertyNames.AppRate;
					ht[AppSellingPrice] = _tblSubOrder.PropertyNames.AppSellingPrice;
					ht[AppDiscount] = _tblSubOrder.PropertyNames.AppDiscount;
					ht[AppCourierCompanyID] = _tblSubOrder.PropertyNames.AppCourierCompanyID;
					ht[AppDocketNo] = _tblSubOrder.PropertyNames.AppDocketNo;
					ht[AppMaxDispatchDate] = _tblSubOrder.PropertyNames.AppMaxDispatchDate;
					ht[AppShippedDate] = _tblSubOrder.PropertyNames.AppShippedDate;
					ht[AppShippedStatus] = _tblSubOrder.PropertyNames.AppShippedStatus;
					ht[AppCommision] = _tblSubOrder.PropertyNames.AppCommision;
					ht[AppCommisionRs] = _tblSubOrder.PropertyNames.AppCommisionRs;
					ht[AppServiceTax] = _tblSubOrder.PropertyNames.AppServiceTax;
					ht[AppServiceTaxRs] = _tblSubOrder.PropertyNames.AppServiceTaxRs;
					ht[AppFixedFee] = _tblSubOrder.PropertyNames.AppFixedFee;
					ht[AppIsPaid] = _tblSubOrder.PropertyNames.AppIsPaid;
					ht[AppManifestGenerated] = _tblSubOrder.PropertyNames.AppManifestGenerated;
					ht[AppManifestID] = _tblSubOrder.PropertyNames.AppManifestID;
					ht[AppSelfCourier] = _tblSubOrder.PropertyNames.AppSelfCourier;
					ht[AppInvoiceGenerated] = _tblSubOrder.PropertyNames.AppInvoiceGenerated;
					ht[AppShippingCharges] = _tblSubOrder.PropertyNames.AppShippingCharges;
					ht[AppDispatchDate] = _tblSubOrder.PropertyNames.AppDispatchDate;
					ht[AppDeliveryDate] = _tblSubOrder.PropertyNames.AppDeliveryDate;
					ht[AppCODCharges] = _tblSubOrder.PropertyNames.AppCODCharges;
					ht[AppIsDisputeApprove] = _tblSubOrder.PropertyNames.AppIsDisputeApprove;
					ht[AppInvoiceURL] = _tblSubOrder.PropertyNames.AppInvoiceURL;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string AppSubOrderID = "AppSubOrderID";
            public const string AppOrderID = "AppOrderID";
            public const string AppSubOrderNo = "AppSubOrderNo";
            public const string AppSubOrderStatusID = "AppSubOrderStatusID";
            public const string AppSubOrderChangeDate = "AppSubOrderChangeDate";
            public const string AppProductDetailID = "AppProductDetailID";
            public const string AppQty = "AppQty";
            public const string AppCurrencyID = "AppCurrencyID";
            public const string AppRate = "AppRate";
            public const string AppSellingPrice = "AppSellingPrice";
            public const string AppDiscount = "AppDiscount";
            public const string AppCourierCompanyID = "AppCourierCompanyID";
            public const string AppDocketNo = "AppDocketNo";
            public const string AppMaxDispatchDate = "AppMaxDispatchDate";
            public const string AppShippedDate = "AppShippedDate";
            public const string AppShippedStatus = "AppShippedStatus";
            public const string AppCommision = "AppCommision";
            public const string AppCommisionRs = "AppCommisionRs";
            public const string AppServiceTax = "AppServiceTax";
            public const string AppServiceTaxRs = "AppServiceTaxRs";
            public const string AppFixedFee = "AppFixedFee";
            public const string AppIsPaid = "AppIsPaid";
            public const string AppManifestGenerated = "AppManifestGenerated";
            public const string AppManifestID = "AppManifestID";
            public const string AppSelfCourier = "AppSelfCourier";
            public const string AppInvoiceGenerated = "AppInvoiceGenerated";
            public const string AppShippingCharges = "AppShippingCharges";
            public const string AppDispatchDate = "AppDispatchDate";
            public const string AppDeliveryDate = "AppDeliveryDate";
            public const string AppCODCharges = "AppCODCharges";
            public const string AppIsDisputeApprove = "AppIsDisputeApprove";
            public const string AppInvoiceURL = "AppInvoiceURL";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppSubOrderID] = _tblSubOrder.ColumnNames.AppSubOrderID;
					ht[AppOrderID] = _tblSubOrder.ColumnNames.AppOrderID;
					ht[AppSubOrderNo] = _tblSubOrder.ColumnNames.AppSubOrderNo;
					ht[AppSubOrderStatusID] = _tblSubOrder.ColumnNames.AppSubOrderStatusID;
					ht[AppSubOrderChangeDate] = _tblSubOrder.ColumnNames.AppSubOrderChangeDate;
					ht[AppProductDetailID] = _tblSubOrder.ColumnNames.AppProductDetailID;
					ht[AppQty] = _tblSubOrder.ColumnNames.AppQty;
					ht[AppCurrencyID] = _tblSubOrder.ColumnNames.AppCurrencyID;
					ht[AppRate] = _tblSubOrder.ColumnNames.AppRate;
					ht[AppSellingPrice] = _tblSubOrder.ColumnNames.AppSellingPrice;
					ht[AppDiscount] = _tblSubOrder.ColumnNames.AppDiscount;
					ht[AppCourierCompanyID] = _tblSubOrder.ColumnNames.AppCourierCompanyID;
					ht[AppDocketNo] = _tblSubOrder.ColumnNames.AppDocketNo;
					ht[AppMaxDispatchDate] = _tblSubOrder.ColumnNames.AppMaxDispatchDate;
					ht[AppShippedDate] = _tblSubOrder.ColumnNames.AppShippedDate;
					ht[AppShippedStatus] = _tblSubOrder.ColumnNames.AppShippedStatus;
					ht[AppCommision] = _tblSubOrder.ColumnNames.AppCommision;
					ht[AppCommisionRs] = _tblSubOrder.ColumnNames.AppCommisionRs;
					ht[AppServiceTax] = _tblSubOrder.ColumnNames.AppServiceTax;
					ht[AppServiceTaxRs] = _tblSubOrder.ColumnNames.AppServiceTaxRs;
					ht[AppFixedFee] = _tblSubOrder.ColumnNames.AppFixedFee;
					ht[AppIsPaid] = _tblSubOrder.ColumnNames.AppIsPaid;
					ht[AppManifestGenerated] = _tblSubOrder.ColumnNames.AppManifestGenerated;
					ht[AppManifestID] = _tblSubOrder.ColumnNames.AppManifestID;
					ht[AppSelfCourier] = _tblSubOrder.ColumnNames.AppSelfCourier;
					ht[AppInvoiceGenerated] = _tblSubOrder.ColumnNames.AppInvoiceGenerated;
					ht[AppShippingCharges] = _tblSubOrder.ColumnNames.AppShippingCharges;
					ht[AppDispatchDate] = _tblSubOrder.ColumnNames.AppDispatchDate;
					ht[AppDeliveryDate] = _tblSubOrder.ColumnNames.AppDeliveryDate;
					ht[AppCODCharges] = _tblSubOrder.ColumnNames.AppCODCharges;
					ht[AppIsDisputeApprove] = _tblSubOrder.ColumnNames.AppIsDisputeApprove;
					ht[AppInvoiceURL] = _tblSubOrder.ColumnNames.AppInvoiceURL;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string AppSubOrderID = "s_AppSubOrderID";
            public const string AppOrderID = "s_AppOrderID";
            public const string AppSubOrderNo = "s_AppSubOrderNo";
            public const string AppSubOrderStatusID = "s_AppSubOrderStatusID";
            public const string AppSubOrderChangeDate = "s_AppSubOrderChangeDate";
            public const string AppProductDetailID = "s_AppProductDetailID";
            public const string AppQty = "s_AppQty";
            public const string AppCurrencyID = "s_AppCurrencyID";
            public const string AppRate = "s_AppRate";
            public const string AppSellingPrice = "s_AppSellingPrice";
            public const string AppDiscount = "s_AppDiscount";
            public const string AppCourierCompanyID = "s_AppCourierCompanyID";
            public const string AppDocketNo = "s_AppDocketNo";
            public const string AppMaxDispatchDate = "s_AppMaxDispatchDate";
            public const string AppShippedDate = "s_AppShippedDate";
            public const string AppShippedStatus = "s_AppShippedStatus";
            public const string AppCommision = "s_AppCommision";
            public const string AppCommisionRs = "s_AppCommisionRs";
            public const string AppServiceTax = "s_AppServiceTax";
            public const string AppServiceTaxRs = "s_AppServiceTaxRs";
            public const string AppFixedFee = "s_AppFixedFee";
            public const string AppIsPaid = "s_AppIsPaid";
            public const string AppManifestGenerated = "s_AppManifestGenerated";
            public const string AppManifestID = "s_AppManifestID";
            public const string AppSelfCourier = "s_AppSelfCourier";
            public const string AppInvoiceGenerated = "s_AppInvoiceGenerated";
            public const string AppShippingCharges = "s_AppShippingCharges";
            public const string AppDispatchDate = "s_AppDispatchDate";
            public const string AppDeliveryDate = "s_AppDeliveryDate";
            public const string AppCODCharges = "s_AppCODCharges";
            public const string AppIsDisputeApprove = "s_AppIsDisputeApprove";
            public const string AppInvoiceURL = "s_AppInvoiceURL";

		}
		#endregion		
		
		#region Properties
	
		public virtual int AppSubOrderID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppSubOrderID);
			}
			set
	        {
				base.Setint(ColumnNames.AppSubOrderID, value);
			}
		}

		public virtual int AppOrderID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppOrderID);
			}
			set
	        {
				base.Setint(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string AppSubOrderNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppSubOrderNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppSubOrderNo, value);
			}
		}

		public virtual int AppSubOrderStatusID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppSubOrderStatusID);
			}
			set
	        {
				base.Setint(ColumnNames.AppSubOrderStatusID, value);
			}
		}

		public virtual DateTime AppSubOrderChangeDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppSubOrderChangeDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppSubOrderChangeDate, value);
			}
		}

		public virtual int AppProductDetailID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppProductDetailID);
			}
			set
	        {
				base.Setint(ColumnNames.AppProductDetailID, value);
			}
		}

		public virtual int AppQty
	    {
			get
	        {
				return base.Getint(ColumnNames.AppQty);
			}
			set
	        {
				base.Setint(ColumnNames.AppQty, value);
			}
		}

		public virtual int AppCurrencyID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppCurrencyID);
			}
			set
	        {
				base.Setint(ColumnNames.AppCurrencyID, value);
			}
		}

		public virtual decimal AppRate
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppRate);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppRate, value);
			}
		}

		public virtual decimal AppSellingPrice
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppSellingPrice);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppSellingPrice, value);
			}
		}

		public virtual decimal AppDiscount
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppDiscount);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppDiscount, value);
			}
		}

		public virtual int AppCourierCompanyID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppCourierCompanyID);
			}
			set
	        {
				base.Setint(ColumnNames.AppCourierCompanyID, value);
			}
		}

		public virtual string AppDocketNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDocketNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDocketNo, value);
			}
		}

		public virtual DateTime AppMaxDispatchDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppMaxDispatchDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppMaxDispatchDate, value);
			}
		}

		public virtual DateTime AppShippedDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppShippedDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppShippedDate, value);
			}
		}

		public virtual string AppShippedStatus
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppShippedStatus);
			}
			set
	        {
				base.Setstring(ColumnNames.AppShippedStatus, value);
			}
		}

		public virtual decimal AppCommision
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppCommision);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppCommision, value);
			}
		}

		public virtual decimal AppCommisionRs
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppCommisionRs);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppCommisionRs, value);
			}
		}

		public virtual decimal AppServiceTax
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppServiceTax);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppServiceTax, value);
			}
		}

		public virtual decimal AppServiceTaxRs
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppServiceTaxRs);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppServiceTaxRs, value);
			}
		}

		public virtual decimal AppFixedFee
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppFixedFee);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppFixedFee, value);
			}
		}

		public virtual bool AppIsPaid
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsPaid);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsPaid, value);
			}
		}

		public virtual bool AppManifestGenerated
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppManifestGenerated);
			}
			set
	        {
				base.Setbool(ColumnNames.AppManifestGenerated, value);
			}
		}

		public virtual int AppManifestID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppManifestID);
			}
			set
	        {
				base.Setint(ColumnNames.AppManifestID, value);
			}
		}

		public virtual bool AppSelfCourier
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppSelfCourier);
			}
			set
	        {
				base.Setbool(ColumnNames.AppSelfCourier, value);
			}
		}

		public virtual bool AppInvoiceGenerated
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppInvoiceGenerated);
			}
			set
	        {
				base.Setbool(ColumnNames.AppInvoiceGenerated, value);
			}
		}

		public virtual decimal AppShippingCharges
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppShippingCharges);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppShippingCharges, value);
			}
		}

		public virtual DateTime AppDispatchDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppDispatchDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppDispatchDate, value);
			}
		}

		public virtual DateTime AppDeliveryDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppDeliveryDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppDeliveryDate, value);
			}
		}

		public virtual decimal AppCODCharges
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppCODCharges);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppCODCharges, value);
			}
		}

		public virtual bool AppIsDisputeApprove
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsDisputeApprove);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsDisputeApprove, value);
			}
		}

		public virtual string AppInvoiceURL
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppInvoiceURL);
			}
			set
	        {
				base.Setstring(ColumnNames.AppInvoiceURL, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_AppSubOrderID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSubOrderID) ? string.Empty : base.GetintAsString(ColumnNames.AppSubOrderID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSubOrderID);
				else
					this.AppSubOrderID = base.SetintAsString(ColumnNames.AppSubOrderID, value);
			}
		}

		public virtual string s_AppOrderID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderID) ? string.Empty : base.GetintAsString(ColumnNames.AppOrderID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderID);
				else
					this.AppOrderID = base.SetintAsString(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string s_AppSubOrderNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSubOrderNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppSubOrderNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSubOrderNo);
				else
					this.AppSubOrderNo = base.SetstringAsString(ColumnNames.AppSubOrderNo, value);
			}
		}

		public virtual string s_AppSubOrderStatusID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSubOrderStatusID) ? string.Empty : base.GetintAsString(ColumnNames.AppSubOrderStatusID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSubOrderStatusID);
				else
					this.AppSubOrderStatusID = base.SetintAsString(ColumnNames.AppSubOrderStatusID, value);
			}
		}

		public virtual string s_AppSubOrderChangeDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSubOrderChangeDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppSubOrderChangeDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSubOrderChangeDate);
				else
					this.AppSubOrderChangeDate = base.SetDateTimeAsString(ColumnNames.AppSubOrderChangeDate, value);
			}
		}

		public virtual string s_AppProductDetailID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppProductDetailID) ? string.Empty : base.GetintAsString(ColumnNames.AppProductDetailID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppProductDetailID);
				else
					this.AppProductDetailID = base.SetintAsString(ColumnNames.AppProductDetailID, value);
			}
		}

		public virtual string s_AppQty
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppQty) ? string.Empty : base.GetintAsString(ColumnNames.AppQty);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppQty);
				else
					this.AppQty = base.SetintAsString(ColumnNames.AppQty, value);
			}
		}

		public virtual string s_AppCurrencyID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCurrencyID) ? string.Empty : base.GetintAsString(ColumnNames.AppCurrencyID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCurrencyID);
				else
					this.AppCurrencyID = base.SetintAsString(ColumnNames.AppCurrencyID, value);
			}
		}

		public virtual string s_AppRate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppRate) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppRate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppRate);
				else
					this.AppRate = base.SetdecimalAsString(ColumnNames.AppRate, value);
			}
		}

		public virtual string s_AppSellingPrice
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSellingPrice) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppSellingPrice);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSellingPrice);
				else
					this.AppSellingPrice = base.SetdecimalAsString(ColumnNames.AppSellingPrice, value);
			}
		}

		public virtual string s_AppDiscount
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDiscount) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppDiscount);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDiscount);
				else
					this.AppDiscount = base.SetdecimalAsString(ColumnNames.AppDiscount, value);
			}
		}

		public virtual string s_AppCourierCompanyID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCourierCompanyID) ? string.Empty : base.GetintAsString(ColumnNames.AppCourierCompanyID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCourierCompanyID);
				else
					this.AppCourierCompanyID = base.SetintAsString(ColumnNames.AppCourierCompanyID, value);
			}
		}

		public virtual string s_AppDocketNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDocketNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppDocketNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDocketNo);
				else
					this.AppDocketNo = base.SetstringAsString(ColumnNames.AppDocketNo, value);
			}
		}

		public virtual string s_AppMaxDispatchDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppMaxDispatchDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppMaxDispatchDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppMaxDispatchDate);
				else
					this.AppMaxDispatchDate = base.SetDateTimeAsString(ColumnNames.AppMaxDispatchDate, value);
			}
		}

		public virtual string s_AppShippedDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppShippedDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppShippedDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppShippedDate);
				else
					this.AppShippedDate = base.SetDateTimeAsString(ColumnNames.AppShippedDate, value);
			}
		}

		public virtual string s_AppShippedStatus
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppShippedStatus) ? string.Empty : base.GetstringAsString(ColumnNames.AppShippedStatus);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppShippedStatus);
				else
					this.AppShippedStatus = base.SetstringAsString(ColumnNames.AppShippedStatus, value);
			}
		}

		public virtual string s_AppCommision
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCommision) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppCommision);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCommision);
				else
					this.AppCommision = base.SetdecimalAsString(ColumnNames.AppCommision, value);
			}
		}

		public virtual string s_AppCommisionRs
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCommisionRs) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppCommisionRs);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCommisionRs);
				else
					this.AppCommisionRs = base.SetdecimalAsString(ColumnNames.AppCommisionRs, value);
			}
		}

		public virtual string s_AppServiceTax
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppServiceTax) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppServiceTax);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppServiceTax);
				else
					this.AppServiceTax = base.SetdecimalAsString(ColumnNames.AppServiceTax, value);
			}
		}

		public virtual string s_AppServiceTaxRs
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppServiceTaxRs) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppServiceTaxRs);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppServiceTaxRs);
				else
					this.AppServiceTaxRs = base.SetdecimalAsString(ColumnNames.AppServiceTaxRs, value);
			}
		}

		public virtual string s_AppFixedFee
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppFixedFee) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppFixedFee);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppFixedFee);
				else
					this.AppFixedFee = base.SetdecimalAsString(ColumnNames.AppFixedFee, value);
			}
		}

		public virtual string s_AppIsPaid
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsPaid) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsPaid);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsPaid);
				else
					this.AppIsPaid = base.SetboolAsString(ColumnNames.AppIsPaid, value);
			}
		}

		public virtual string s_AppManifestGenerated
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppManifestGenerated) ? string.Empty : base.GetboolAsString(ColumnNames.AppManifestGenerated);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppManifestGenerated);
				else
					this.AppManifestGenerated = base.SetboolAsString(ColumnNames.AppManifestGenerated, value);
			}
		}

		public virtual string s_AppManifestID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppManifestID) ? string.Empty : base.GetintAsString(ColumnNames.AppManifestID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppManifestID);
				else
					this.AppManifestID = base.SetintAsString(ColumnNames.AppManifestID, value);
			}
		}

		public virtual string s_AppSelfCourier
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppSelfCourier) ? string.Empty : base.GetboolAsString(ColumnNames.AppSelfCourier);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppSelfCourier);
				else
					this.AppSelfCourier = base.SetboolAsString(ColumnNames.AppSelfCourier, value);
			}
		}

		public virtual string s_AppInvoiceGenerated
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppInvoiceGenerated) ? string.Empty : base.GetboolAsString(ColumnNames.AppInvoiceGenerated);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppInvoiceGenerated);
				else
					this.AppInvoiceGenerated = base.SetboolAsString(ColumnNames.AppInvoiceGenerated, value);
			}
		}

		public virtual string s_AppShippingCharges
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppShippingCharges) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppShippingCharges);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppShippingCharges);
				else
					this.AppShippingCharges = base.SetdecimalAsString(ColumnNames.AppShippingCharges, value);
			}
		}

		public virtual string s_AppDispatchDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDispatchDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppDispatchDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDispatchDate);
				else
					this.AppDispatchDate = base.SetDateTimeAsString(ColumnNames.AppDispatchDate, value);
			}
		}

		public virtual string s_AppDeliveryDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDeliveryDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppDeliveryDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDeliveryDate);
				else
					this.AppDeliveryDate = base.SetDateTimeAsString(ColumnNames.AppDeliveryDate, value);
			}
		}

		public virtual string s_AppCODCharges
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCODCharges) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppCODCharges);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCODCharges);
				else
					this.AppCODCharges = base.SetdecimalAsString(ColumnNames.AppCODCharges, value);
			}
		}

		public virtual string s_AppIsDisputeApprove
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsDisputeApprove) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsDisputeApprove);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsDisputeApprove);
				else
					this.AppIsDisputeApprove = base.SetboolAsString(ColumnNames.AppIsDisputeApprove, value);
			}
		}

		public virtual string s_AppInvoiceURL
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppInvoiceURL) ? string.Empty : base.GetstringAsString(ColumnNames.AppInvoiceURL);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppInvoiceURL);
				else
					this.AppInvoiceURL = base.SetstringAsString(ColumnNames.AppInvoiceURL, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter AppSubOrderID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSubOrderID, Parameters.AppSubOrderID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppSubOrderNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSubOrderNo, Parameters.AppSubOrderNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppSubOrderStatusID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSubOrderStatusID, Parameters.AppSubOrderStatusID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppSubOrderChangeDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSubOrderChangeDate, Parameters.AppSubOrderChangeDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppProductDetailID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppProductDetailID, Parameters.AppProductDetailID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppQty
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppQty, Parameters.AppQty);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCurrencyID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCurrencyID, Parameters.AppCurrencyID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppRate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppRate, Parameters.AppRate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppSellingPrice
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSellingPrice, Parameters.AppSellingPrice);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDiscount
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDiscount, Parameters.AppDiscount);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCourierCompanyID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCourierCompanyID, Parameters.AppCourierCompanyID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDocketNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDocketNo, Parameters.AppDocketNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppMaxDispatchDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppMaxDispatchDate, Parameters.AppMaxDispatchDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppShippedDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppShippedDate, Parameters.AppShippedDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppShippedStatus
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppShippedStatus, Parameters.AppShippedStatus);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCommision
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCommision, Parameters.AppCommision);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCommisionRs
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCommisionRs, Parameters.AppCommisionRs);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppServiceTax
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppServiceTax, Parameters.AppServiceTax);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppServiceTaxRs
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppServiceTaxRs, Parameters.AppServiceTaxRs);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppFixedFee
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppFixedFee, Parameters.AppFixedFee);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsPaid
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsPaid, Parameters.AppIsPaid);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppManifestGenerated
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppManifestGenerated, Parameters.AppManifestGenerated);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppManifestID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppManifestID, Parameters.AppManifestID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppSelfCourier
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppSelfCourier, Parameters.AppSelfCourier);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppInvoiceGenerated
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppInvoiceGenerated, Parameters.AppInvoiceGenerated);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppShippingCharges
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppShippingCharges, Parameters.AppShippingCharges);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDispatchDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDispatchDate, Parameters.AppDispatchDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDeliveryDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDeliveryDate, Parameters.AppDeliveryDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCODCharges
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCODCharges, Parameters.AppCODCharges);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsDisputeApprove
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsDisputeApprove, Parameters.AppIsDisputeApprove);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppInvoiceURL
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppInvoiceURL, Parameters.AppInvoiceURL);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter AppSubOrderID
		    {
				get
		        {
					if(_AppSubOrderID_W == null)
	        	    {
						_AppSubOrderID_W = TearOff.AppSubOrderID;
					}
					return _AppSubOrderID_W;
				}
			}

			public WhereParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public WhereParameter AppSubOrderNo
		    {
				get
		        {
					if(_AppSubOrderNo_W == null)
	        	    {
						_AppSubOrderNo_W = TearOff.AppSubOrderNo;
					}
					return _AppSubOrderNo_W;
				}
			}

			public WhereParameter AppSubOrderStatusID
		    {
				get
		        {
					if(_AppSubOrderStatusID_W == null)
	        	    {
						_AppSubOrderStatusID_W = TearOff.AppSubOrderStatusID;
					}
					return _AppSubOrderStatusID_W;
				}
			}

			public WhereParameter AppSubOrderChangeDate
		    {
				get
		        {
					if(_AppSubOrderChangeDate_W == null)
	        	    {
						_AppSubOrderChangeDate_W = TearOff.AppSubOrderChangeDate;
					}
					return _AppSubOrderChangeDate_W;
				}
			}

			public WhereParameter AppProductDetailID
		    {
				get
		        {
					if(_AppProductDetailID_W == null)
	        	    {
						_AppProductDetailID_W = TearOff.AppProductDetailID;
					}
					return _AppProductDetailID_W;
				}
			}

			public WhereParameter AppQty
		    {
				get
		        {
					if(_AppQty_W == null)
	        	    {
						_AppQty_W = TearOff.AppQty;
					}
					return _AppQty_W;
				}
			}

			public WhereParameter AppCurrencyID
		    {
				get
		        {
					if(_AppCurrencyID_W == null)
	        	    {
						_AppCurrencyID_W = TearOff.AppCurrencyID;
					}
					return _AppCurrencyID_W;
				}
			}

			public WhereParameter AppRate
		    {
				get
		        {
					if(_AppRate_W == null)
	        	    {
						_AppRate_W = TearOff.AppRate;
					}
					return _AppRate_W;
				}
			}

			public WhereParameter AppSellingPrice
		    {
				get
		        {
					if(_AppSellingPrice_W == null)
	        	    {
						_AppSellingPrice_W = TearOff.AppSellingPrice;
					}
					return _AppSellingPrice_W;
				}
			}

			public WhereParameter AppDiscount
		    {
				get
		        {
					if(_AppDiscount_W == null)
	        	    {
						_AppDiscount_W = TearOff.AppDiscount;
					}
					return _AppDiscount_W;
				}
			}

			public WhereParameter AppCourierCompanyID
		    {
				get
		        {
					if(_AppCourierCompanyID_W == null)
	        	    {
						_AppCourierCompanyID_W = TearOff.AppCourierCompanyID;
					}
					return _AppCourierCompanyID_W;
				}
			}

			public WhereParameter AppDocketNo
		    {
				get
		        {
					if(_AppDocketNo_W == null)
	        	    {
						_AppDocketNo_W = TearOff.AppDocketNo;
					}
					return _AppDocketNo_W;
				}
			}

			public WhereParameter AppMaxDispatchDate
		    {
				get
		        {
					if(_AppMaxDispatchDate_W == null)
	        	    {
						_AppMaxDispatchDate_W = TearOff.AppMaxDispatchDate;
					}
					return _AppMaxDispatchDate_W;
				}
			}

			public WhereParameter AppShippedDate
		    {
				get
		        {
					if(_AppShippedDate_W == null)
	        	    {
						_AppShippedDate_W = TearOff.AppShippedDate;
					}
					return _AppShippedDate_W;
				}
			}

			public WhereParameter AppShippedStatus
		    {
				get
		        {
					if(_AppShippedStatus_W == null)
	        	    {
						_AppShippedStatus_W = TearOff.AppShippedStatus;
					}
					return _AppShippedStatus_W;
				}
			}

			public WhereParameter AppCommision
		    {
				get
		        {
					if(_AppCommision_W == null)
	        	    {
						_AppCommision_W = TearOff.AppCommision;
					}
					return _AppCommision_W;
				}
			}

			public WhereParameter AppCommisionRs
		    {
				get
		        {
					if(_AppCommisionRs_W == null)
	        	    {
						_AppCommisionRs_W = TearOff.AppCommisionRs;
					}
					return _AppCommisionRs_W;
				}
			}

			public WhereParameter AppServiceTax
		    {
				get
		        {
					if(_AppServiceTax_W == null)
	        	    {
						_AppServiceTax_W = TearOff.AppServiceTax;
					}
					return _AppServiceTax_W;
				}
			}

			public WhereParameter AppServiceTaxRs
		    {
				get
		        {
					if(_AppServiceTaxRs_W == null)
	        	    {
						_AppServiceTaxRs_W = TearOff.AppServiceTaxRs;
					}
					return _AppServiceTaxRs_W;
				}
			}

			public WhereParameter AppFixedFee
		    {
				get
		        {
					if(_AppFixedFee_W == null)
	        	    {
						_AppFixedFee_W = TearOff.AppFixedFee;
					}
					return _AppFixedFee_W;
				}
			}

			public WhereParameter AppIsPaid
		    {
				get
		        {
					if(_AppIsPaid_W == null)
	        	    {
						_AppIsPaid_W = TearOff.AppIsPaid;
					}
					return _AppIsPaid_W;
				}
			}

			public WhereParameter AppManifestGenerated
		    {
				get
		        {
					if(_AppManifestGenerated_W == null)
	        	    {
						_AppManifestGenerated_W = TearOff.AppManifestGenerated;
					}
					return _AppManifestGenerated_W;
				}
			}

			public WhereParameter AppManifestID
		    {
				get
		        {
					if(_AppManifestID_W == null)
	        	    {
						_AppManifestID_W = TearOff.AppManifestID;
					}
					return _AppManifestID_W;
				}
			}

			public WhereParameter AppSelfCourier
		    {
				get
		        {
					if(_AppSelfCourier_W == null)
	        	    {
						_AppSelfCourier_W = TearOff.AppSelfCourier;
					}
					return _AppSelfCourier_W;
				}
			}

			public WhereParameter AppInvoiceGenerated
		    {
				get
		        {
					if(_AppInvoiceGenerated_W == null)
	        	    {
						_AppInvoiceGenerated_W = TearOff.AppInvoiceGenerated;
					}
					return _AppInvoiceGenerated_W;
				}
			}

			public WhereParameter AppShippingCharges
		    {
				get
		        {
					if(_AppShippingCharges_W == null)
	        	    {
						_AppShippingCharges_W = TearOff.AppShippingCharges;
					}
					return _AppShippingCharges_W;
				}
			}

			public WhereParameter AppDispatchDate
		    {
				get
		        {
					if(_AppDispatchDate_W == null)
	        	    {
						_AppDispatchDate_W = TearOff.AppDispatchDate;
					}
					return _AppDispatchDate_W;
				}
			}

			public WhereParameter AppDeliveryDate
		    {
				get
		        {
					if(_AppDeliveryDate_W == null)
	        	    {
						_AppDeliveryDate_W = TearOff.AppDeliveryDate;
					}
					return _AppDeliveryDate_W;
				}
			}

			public WhereParameter AppCODCharges
		    {
				get
		        {
					if(_AppCODCharges_W == null)
	        	    {
						_AppCODCharges_W = TearOff.AppCODCharges;
					}
					return _AppCODCharges_W;
				}
			}

			public WhereParameter AppIsDisputeApprove
		    {
				get
		        {
					if(_AppIsDisputeApprove_W == null)
	        	    {
						_AppIsDisputeApprove_W = TearOff.AppIsDisputeApprove;
					}
					return _AppIsDisputeApprove_W;
				}
			}

			public WhereParameter AppInvoiceURL
		    {
				get
		        {
					if(_AppInvoiceURL_W == null)
	        	    {
						_AppInvoiceURL_W = TearOff.AppInvoiceURL;
					}
					return _AppInvoiceURL_W;
				}
			}

			private WhereParameter _AppSubOrderID_W = null;
			private WhereParameter _AppOrderID_W = null;
			private WhereParameter _AppSubOrderNo_W = null;
			private WhereParameter _AppSubOrderStatusID_W = null;
			private WhereParameter _AppSubOrderChangeDate_W = null;
			private WhereParameter _AppProductDetailID_W = null;
			private WhereParameter _AppQty_W = null;
			private WhereParameter _AppCurrencyID_W = null;
			private WhereParameter _AppRate_W = null;
			private WhereParameter _AppSellingPrice_W = null;
			private WhereParameter _AppDiscount_W = null;
			private WhereParameter _AppCourierCompanyID_W = null;
			private WhereParameter _AppDocketNo_W = null;
			private WhereParameter _AppMaxDispatchDate_W = null;
			private WhereParameter _AppShippedDate_W = null;
			private WhereParameter _AppShippedStatus_W = null;
			private WhereParameter _AppCommision_W = null;
			private WhereParameter _AppCommisionRs_W = null;
			private WhereParameter _AppServiceTax_W = null;
			private WhereParameter _AppServiceTaxRs_W = null;
			private WhereParameter _AppFixedFee_W = null;
			private WhereParameter _AppIsPaid_W = null;
			private WhereParameter _AppManifestGenerated_W = null;
			private WhereParameter _AppManifestID_W = null;
			private WhereParameter _AppSelfCourier_W = null;
			private WhereParameter _AppInvoiceGenerated_W = null;
			private WhereParameter _AppShippingCharges_W = null;
			private WhereParameter _AppDispatchDate_W = null;
			private WhereParameter _AppDeliveryDate_W = null;
			private WhereParameter _AppCODCharges_W = null;
			private WhereParameter _AppIsDisputeApprove_W = null;
			private WhereParameter _AppInvoiceURL_W = null;

			public void WhereClauseReset()
			{
				_AppSubOrderID_W = null;
				_AppOrderID_W = null;
				_AppSubOrderNo_W = null;
				_AppSubOrderStatusID_W = null;
				_AppSubOrderChangeDate_W = null;
				_AppProductDetailID_W = null;
				_AppQty_W = null;
				_AppCurrencyID_W = null;
				_AppRate_W = null;
				_AppSellingPrice_W = null;
				_AppDiscount_W = null;
				_AppCourierCompanyID_W = null;
				_AppDocketNo_W = null;
				_AppMaxDispatchDate_W = null;
				_AppShippedDate_W = null;
				_AppShippedStatus_W = null;
				_AppCommision_W = null;
				_AppCommisionRs_W = null;
				_AppServiceTax_W = null;
				_AppServiceTaxRs_W = null;
				_AppFixedFee_W = null;
				_AppIsPaid_W = null;
				_AppManifestGenerated_W = null;
				_AppManifestID_W = null;
				_AppSelfCourier_W = null;
				_AppInvoiceGenerated_W = null;
				_AppShippingCharges_W = null;
				_AppDispatchDate_W = null;
				_AppDeliveryDate_W = null;
				_AppCODCharges_W = null;
				_AppIsDisputeApprove_W = null;
				_AppInvoiceURL_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter AppSubOrderID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSubOrderID, Parameters.AppSubOrderID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppSubOrderNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSubOrderNo, Parameters.AppSubOrderNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppSubOrderStatusID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSubOrderStatusID, Parameters.AppSubOrderStatusID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppSubOrderChangeDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSubOrderChangeDate, Parameters.AppSubOrderChangeDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppProductDetailID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppProductDetailID, Parameters.AppProductDetailID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppQty
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppQty, Parameters.AppQty);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCurrencyID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCurrencyID, Parameters.AppCurrencyID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppRate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppRate, Parameters.AppRate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppSellingPrice
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSellingPrice, Parameters.AppSellingPrice);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDiscount
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDiscount, Parameters.AppDiscount);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCourierCompanyID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCourierCompanyID, Parameters.AppCourierCompanyID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDocketNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDocketNo, Parameters.AppDocketNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppMaxDispatchDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppMaxDispatchDate, Parameters.AppMaxDispatchDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppShippedDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppShippedDate, Parameters.AppShippedDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppShippedStatus
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppShippedStatus, Parameters.AppShippedStatus);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCommision
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCommision, Parameters.AppCommision);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCommisionRs
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCommisionRs, Parameters.AppCommisionRs);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppServiceTax
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppServiceTax, Parameters.AppServiceTax);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppServiceTaxRs
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppServiceTaxRs, Parameters.AppServiceTaxRs);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppFixedFee
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppFixedFee, Parameters.AppFixedFee);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsPaid
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsPaid, Parameters.AppIsPaid);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppManifestGenerated
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppManifestGenerated, Parameters.AppManifestGenerated);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppManifestID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppManifestID, Parameters.AppManifestID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppSelfCourier
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppSelfCourier, Parameters.AppSelfCourier);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppInvoiceGenerated
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppInvoiceGenerated, Parameters.AppInvoiceGenerated);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppShippingCharges
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppShippingCharges, Parameters.AppShippingCharges);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDispatchDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDispatchDate, Parameters.AppDispatchDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDeliveryDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDeliveryDate, Parameters.AppDeliveryDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCODCharges
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCODCharges, Parameters.AppCODCharges);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsDisputeApprove
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsDisputeApprove, Parameters.AppIsDisputeApprove);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppInvoiceURL
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppInvoiceURL, Parameters.AppInvoiceURL);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter AppSubOrderID
		    {
				get
		        {
					if(_AppSubOrderID_W == null)
	        	    {
						_AppSubOrderID_W = TearOff.AppSubOrderID;
					}
					return _AppSubOrderID_W;
				}
			}

			public AggregateParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public AggregateParameter AppSubOrderNo
		    {
				get
		        {
					if(_AppSubOrderNo_W == null)
	        	    {
						_AppSubOrderNo_W = TearOff.AppSubOrderNo;
					}
					return _AppSubOrderNo_W;
				}
			}

			public AggregateParameter AppSubOrderStatusID
		    {
				get
		        {
					if(_AppSubOrderStatusID_W == null)
	        	    {
						_AppSubOrderStatusID_W = TearOff.AppSubOrderStatusID;
					}
					return _AppSubOrderStatusID_W;
				}
			}

			public AggregateParameter AppSubOrderChangeDate
		    {
				get
		        {
					if(_AppSubOrderChangeDate_W == null)
	        	    {
						_AppSubOrderChangeDate_W = TearOff.AppSubOrderChangeDate;
					}
					return _AppSubOrderChangeDate_W;
				}
			}

			public AggregateParameter AppProductDetailID
		    {
				get
		        {
					if(_AppProductDetailID_W == null)
	        	    {
						_AppProductDetailID_W = TearOff.AppProductDetailID;
					}
					return _AppProductDetailID_W;
				}
			}

			public AggregateParameter AppQty
		    {
				get
		        {
					if(_AppQty_W == null)
	        	    {
						_AppQty_W = TearOff.AppQty;
					}
					return _AppQty_W;
				}
			}

			public AggregateParameter AppCurrencyID
		    {
				get
		        {
					if(_AppCurrencyID_W == null)
	        	    {
						_AppCurrencyID_W = TearOff.AppCurrencyID;
					}
					return _AppCurrencyID_W;
				}
			}

			public AggregateParameter AppRate
		    {
				get
		        {
					if(_AppRate_W == null)
	        	    {
						_AppRate_W = TearOff.AppRate;
					}
					return _AppRate_W;
				}
			}

			public AggregateParameter AppSellingPrice
		    {
				get
		        {
					if(_AppSellingPrice_W == null)
	        	    {
						_AppSellingPrice_W = TearOff.AppSellingPrice;
					}
					return _AppSellingPrice_W;
				}
			}

			public AggregateParameter AppDiscount
		    {
				get
		        {
					if(_AppDiscount_W == null)
	        	    {
						_AppDiscount_W = TearOff.AppDiscount;
					}
					return _AppDiscount_W;
				}
			}

			public AggregateParameter AppCourierCompanyID
		    {
				get
		        {
					if(_AppCourierCompanyID_W == null)
	        	    {
						_AppCourierCompanyID_W = TearOff.AppCourierCompanyID;
					}
					return _AppCourierCompanyID_W;
				}
			}

			public AggregateParameter AppDocketNo
		    {
				get
		        {
					if(_AppDocketNo_W == null)
	        	    {
						_AppDocketNo_W = TearOff.AppDocketNo;
					}
					return _AppDocketNo_W;
				}
			}

			public AggregateParameter AppMaxDispatchDate
		    {
				get
		        {
					if(_AppMaxDispatchDate_W == null)
	        	    {
						_AppMaxDispatchDate_W = TearOff.AppMaxDispatchDate;
					}
					return _AppMaxDispatchDate_W;
				}
			}

			public AggregateParameter AppShippedDate
		    {
				get
		        {
					if(_AppShippedDate_W == null)
	        	    {
						_AppShippedDate_W = TearOff.AppShippedDate;
					}
					return _AppShippedDate_W;
				}
			}

			public AggregateParameter AppShippedStatus
		    {
				get
		        {
					if(_AppShippedStatus_W == null)
	        	    {
						_AppShippedStatus_W = TearOff.AppShippedStatus;
					}
					return _AppShippedStatus_W;
				}
			}

			public AggregateParameter AppCommision
		    {
				get
		        {
					if(_AppCommision_W == null)
	        	    {
						_AppCommision_W = TearOff.AppCommision;
					}
					return _AppCommision_W;
				}
			}

			public AggregateParameter AppCommisionRs
		    {
				get
		        {
					if(_AppCommisionRs_W == null)
	        	    {
						_AppCommisionRs_W = TearOff.AppCommisionRs;
					}
					return _AppCommisionRs_W;
				}
			}

			public AggregateParameter AppServiceTax
		    {
				get
		        {
					if(_AppServiceTax_W == null)
	        	    {
						_AppServiceTax_W = TearOff.AppServiceTax;
					}
					return _AppServiceTax_W;
				}
			}

			public AggregateParameter AppServiceTaxRs
		    {
				get
		        {
					if(_AppServiceTaxRs_W == null)
	        	    {
						_AppServiceTaxRs_W = TearOff.AppServiceTaxRs;
					}
					return _AppServiceTaxRs_W;
				}
			}

			public AggregateParameter AppFixedFee
		    {
				get
		        {
					if(_AppFixedFee_W == null)
	        	    {
						_AppFixedFee_W = TearOff.AppFixedFee;
					}
					return _AppFixedFee_W;
				}
			}

			public AggregateParameter AppIsPaid
		    {
				get
		        {
					if(_AppIsPaid_W == null)
	        	    {
						_AppIsPaid_W = TearOff.AppIsPaid;
					}
					return _AppIsPaid_W;
				}
			}

			public AggregateParameter AppManifestGenerated
		    {
				get
		        {
					if(_AppManifestGenerated_W == null)
	        	    {
						_AppManifestGenerated_W = TearOff.AppManifestGenerated;
					}
					return _AppManifestGenerated_W;
				}
			}

			public AggregateParameter AppManifestID
		    {
				get
		        {
					if(_AppManifestID_W == null)
	        	    {
						_AppManifestID_W = TearOff.AppManifestID;
					}
					return _AppManifestID_W;
				}
			}

			public AggregateParameter AppSelfCourier
		    {
				get
		        {
					if(_AppSelfCourier_W == null)
	        	    {
						_AppSelfCourier_W = TearOff.AppSelfCourier;
					}
					return _AppSelfCourier_W;
				}
			}

			public AggregateParameter AppInvoiceGenerated
		    {
				get
		        {
					if(_AppInvoiceGenerated_W == null)
	        	    {
						_AppInvoiceGenerated_W = TearOff.AppInvoiceGenerated;
					}
					return _AppInvoiceGenerated_W;
				}
			}

			public AggregateParameter AppShippingCharges
		    {
				get
		        {
					if(_AppShippingCharges_W == null)
	        	    {
						_AppShippingCharges_W = TearOff.AppShippingCharges;
					}
					return _AppShippingCharges_W;
				}
			}

			public AggregateParameter AppDispatchDate
		    {
				get
		        {
					if(_AppDispatchDate_W == null)
	        	    {
						_AppDispatchDate_W = TearOff.AppDispatchDate;
					}
					return _AppDispatchDate_W;
				}
			}

			public AggregateParameter AppDeliveryDate
		    {
				get
		        {
					if(_AppDeliveryDate_W == null)
	        	    {
						_AppDeliveryDate_W = TearOff.AppDeliveryDate;
					}
					return _AppDeliveryDate_W;
				}
			}

			public AggregateParameter AppCODCharges
		    {
				get
		        {
					if(_AppCODCharges_W == null)
	        	    {
						_AppCODCharges_W = TearOff.AppCODCharges;
					}
					return _AppCODCharges_W;
				}
			}

			public AggregateParameter AppIsDisputeApprove
		    {
				get
		        {
					if(_AppIsDisputeApprove_W == null)
	        	    {
						_AppIsDisputeApprove_W = TearOff.AppIsDisputeApprove;
					}
					return _AppIsDisputeApprove_W;
				}
			}

			public AggregateParameter AppInvoiceURL
		    {
				get
		        {
					if(_AppInvoiceURL_W == null)
	        	    {
						_AppInvoiceURL_W = TearOff.AppInvoiceURL;
					}
					return _AppInvoiceURL_W;
				}
			}

			private AggregateParameter _AppSubOrderID_W = null;
			private AggregateParameter _AppOrderID_W = null;
			private AggregateParameter _AppSubOrderNo_W = null;
			private AggregateParameter _AppSubOrderStatusID_W = null;
			private AggregateParameter _AppSubOrderChangeDate_W = null;
			private AggregateParameter _AppProductDetailID_W = null;
			private AggregateParameter _AppQty_W = null;
			private AggregateParameter _AppCurrencyID_W = null;
			private AggregateParameter _AppRate_W = null;
			private AggregateParameter _AppSellingPrice_W = null;
			private AggregateParameter _AppDiscount_W = null;
			private AggregateParameter _AppCourierCompanyID_W = null;
			private AggregateParameter _AppDocketNo_W = null;
			private AggregateParameter _AppMaxDispatchDate_W = null;
			private AggregateParameter _AppShippedDate_W = null;
			private AggregateParameter _AppShippedStatus_W = null;
			private AggregateParameter _AppCommision_W = null;
			private AggregateParameter _AppCommisionRs_W = null;
			private AggregateParameter _AppServiceTax_W = null;
			private AggregateParameter _AppServiceTaxRs_W = null;
			private AggregateParameter _AppFixedFee_W = null;
			private AggregateParameter _AppIsPaid_W = null;
			private AggregateParameter _AppManifestGenerated_W = null;
			private AggregateParameter _AppManifestID_W = null;
			private AggregateParameter _AppSelfCourier_W = null;
			private AggregateParameter _AppInvoiceGenerated_W = null;
			private AggregateParameter _AppShippingCharges_W = null;
			private AggregateParameter _AppDispatchDate_W = null;
			private AggregateParameter _AppDeliveryDate_W = null;
			private AggregateParameter _AppCODCharges_W = null;
			private AggregateParameter _AppIsDisputeApprove_W = null;
			private AggregateParameter _AppInvoiceURL_W = null;

			public void AggregateClauseReset()
			{
				_AppSubOrderID_W = null;
				_AppOrderID_W = null;
				_AppSubOrderNo_W = null;
				_AppSubOrderStatusID_W = null;
				_AppSubOrderChangeDate_W = null;
				_AppProductDetailID_W = null;
				_AppQty_W = null;
				_AppCurrencyID_W = null;
				_AppRate_W = null;
				_AppSellingPrice_W = null;
				_AppDiscount_W = null;
				_AppCourierCompanyID_W = null;
				_AppDocketNo_W = null;
				_AppMaxDispatchDate_W = null;
				_AppShippedDate_W = null;
				_AppShippedStatus_W = null;
				_AppCommision_W = null;
				_AppCommisionRs_W = null;
				_AppServiceTax_W = null;
				_AppServiceTaxRs_W = null;
				_AppFixedFee_W = null;
				_AppIsPaid_W = null;
				_AppManifestGenerated_W = null;
				_AppManifestID_W = null;
				_AppSelfCourier_W = null;
				_AppInvoiceGenerated_W = null;
				_AppShippingCharges_W = null;
				_AppDispatchDate_W = null;
				_AppDeliveryDate_W = null;
				_AppCODCharges_W = null;
				_AppIsDisputeApprove_W = null;
				_AppInvoiceURL_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblSubOrderInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.AppSubOrderID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblSubOrderUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblSubOrderDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.AppSubOrderID);
			p.SourceColumn = ColumnNames.AppSubOrderID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.AppSubOrderID);
			p.SourceColumn = ColumnNames.AppSubOrderID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderID);
			p.SourceColumn = ColumnNames.AppOrderID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppSubOrderNo);
			p.SourceColumn = ColumnNames.AppSubOrderNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppSubOrderStatusID);
			p.SourceColumn = ColumnNames.AppSubOrderStatusID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppSubOrderChangeDate);
			p.SourceColumn = ColumnNames.AppSubOrderChangeDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppProductDetailID);
			p.SourceColumn = ColumnNames.AppProductDetailID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppQty);
			p.SourceColumn = ColumnNames.AppQty;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCurrencyID);
			p.SourceColumn = ColumnNames.AppCurrencyID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppRate);
			p.SourceColumn = ColumnNames.AppRate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppSellingPrice);
			p.SourceColumn = ColumnNames.AppSellingPrice;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDiscount);
			p.SourceColumn = ColumnNames.AppDiscount;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCourierCompanyID);
			p.SourceColumn = ColumnNames.AppCourierCompanyID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDocketNo);
			p.SourceColumn = ColumnNames.AppDocketNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppMaxDispatchDate);
			p.SourceColumn = ColumnNames.AppMaxDispatchDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppShippedDate);
			p.SourceColumn = ColumnNames.AppShippedDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppShippedStatus);
			p.SourceColumn = ColumnNames.AppShippedStatus;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCommision);
			p.SourceColumn = ColumnNames.AppCommision;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCommisionRs);
			p.SourceColumn = ColumnNames.AppCommisionRs;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppServiceTax);
			p.SourceColumn = ColumnNames.AppServiceTax;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppServiceTaxRs);
			p.SourceColumn = ColumnNames.AppServiceTaxRs;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppFixedFee);
			p.SourceColumn = ColumnNames.AppFixedFee;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsPaid);
			p.SourceColumn = ColumnNames.AppIsPaid;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppManifestGenerated);
			p.SourceColumn = ColumnNames.AppManifestGenerated;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppManifestID);
			p.SourceColumn = ColumnNames.AppManifestID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppSelfCourier);
			p.SourceColumn = ColumnNames.AppSelfCourier;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppInvoiceGenerated);
			p.SourceColumn = ColumnNames.AppInvoiceGenerated;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppShippingCharges);
			p.SourceColumn = ColumnNames.AppShippingCharges;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDispatchDate);
			p.SourceColumn = ColumnNames.AppDispatchDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDeliveryDate);
			p.SourceColumn = ColumnNames.AppDeliveryDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCODCharges);
			p.SourceColumn = ColumnNames.AppCODCharges;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsDisputeApprove);
			p.SourceColumn = ColumnNames.AppIsDisputeApprove;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppInvoiceURL);
			p.SourceColumn = ColumnNames.AppInvoiceURL;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
