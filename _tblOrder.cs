
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace BusinessLayer
{
	public abstract class _tblOrder : SqlClientEntity
	{
		public _tblOrder()
		{
			this.QuerySource = "tblOrder";
			this.MappingName = "tblOrder";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblOrderLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int AppOrderID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.AppOrderID, AppOrderID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblOrderLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter AppOrderID
			{
				get
				{
					return new SqlParameter("@AppOrderID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppOrderNo
			{
				get
				{
					return new SqlParameter("@AppOrderNo", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppCustomerID
			{
				get
				{
					return new SqlParameter("@AppCustomerID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppCreatedDate
			{
				get
				{
					return new SqlParameter("@AppCreatedDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppOrderStatusID
			{
				get
				{
					return new SqlParameter("@AppOrderStatusID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppOrderAmount
			{
				get
				{
					return new SqlParameter("@AppOrderAmount", SqlDbType.Decimal, 0);
				}
			}
			
			public static SqlParameter AppOrderStatusChangeDate
			{
				get
				{
					return new SqlParameter("@AppOrderStatusChangeDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppReceiverName
			{
				get
				{
					return new SqlParameter("@AppReceiverName", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppReceiverAddress
			{
				get
				{
					return new SqlParameter("@AppReceiverAddress", SqlDbType.VarChar, 1000);
				}
			}
			
			public static SqlParameter AppReceiverContactNo1
			{
				get
				{
					return new SqlParameter("@AppReceiverContactNo1", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppReceiverContactNo2
			{
				get
				{
					return new SqlParameter("@AppReceiverContactNo2", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppPreferedTime
			{
				get
				{
					return new SqlParameter("@AppPreferedTime", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppRecevierEmail
			{
				get
				{
					return new SqlParameter("@AppRecevierEmail", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppBillReceiverName
			{
				get
				{
					return new SqlParameter("@AppBillReceiverName", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppBillReceiverAddress
			{
				get
				{
					return new SqlParameter("@AppBillReceiverAddress", SqlDbType.VarChar, 1000);
				}
			}
			
			public static SqlParameter AppBillReceiverContactNo1
			{
				get
				{
					return new SqlParameter("@AppBillReceiverContactNo1", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppBillReceiverContactNo2
			{
				get
				{
					return new SqlParameter("@AppBillReceiverContactNo2", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppBillRecevierEmail
			{
				get
				{
					return new SqlParameter("@AppBillRecevierEmail", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppBillReceiverPIN
			{
				get
				{
					return new SqlParameter("@AppBillReceiverPIN", SqlDbType.VarChar, 10);
				}
			}
			
			public static SqlParameter AppReceiverPIN
			{
				get
				{
					return new SqlParameter("@AppReceiverPIN", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppPaymentMode
			{
				get
				{
					return new SqlParameter("@AppPaymentMode", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppPaymentStatus
			{
				get
				{
					return new SqlParameter("@AppPaymentStatus", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppTransactionID
			{
				get
				{
					return new SqlParameter("@AppTransactionID", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppReceiverCityID
			{
				get
				{
					return new SqlParameter("@AppReceiverCityID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppReceiverCountryID
			{
				get
				{
					return new SqlParameter("@AppReceiverCountryID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppReceiverStateID
			{
				get
				{
					return new SqlParameter("@AppReceiverStateID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppBillReceiverCountryID
			{
				get
				{
					return new SqlParameter("@AppBillReceiverCountryID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppBillReceiverStateID
			{
				get
				{
					return new SqlParameter("@AppBillReceiverStateID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppBillReceiverCityID
			{
				get
				{
					return new SqlParameter("@AppBillReceiverCityID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppBankRefNo
			{
				get
				{
					return new SqlParameter("@AppBankRefNo", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppPaymentType
			{
				get
				{
					return new SqlParameter("@AppPaymentType", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppCardName
			{
				get
				{
					return new SqlParameter("@AppCardName", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppCurrency
			{
				get
				{
					return new SqlParameter("@AppCurrency", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter AppShipmentID
			{
				get
				{
					return new SqlParameter("@AppShipmentID", SqlDbType.VarChar, 200);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string AppOrderID = "appOrderID";
            public const string AppOrderNo = "appOrderNo";
            public const string AppCustomerID = "appCustomerID";
            public const string AppCreatedDate = "appCreatedDate";
            public const string AppOrderStatusID = "appOrderStatusID";
            public const string AppOrderAmount = "appOrderAmount";
            public const string AppOrderStatusChangeDate = "appOrderStatusChangeDate";
            public const string AppReceiverName = "appReceiverName";
            public const string AppReceiverAddress = "appReceiverAddress";
            public const string AppReceiverContactNo1 = "appReceiverContactNo1";
            public const string AppReceiverContactNo2 = "appReceiverContactNo2";
            public const string AppPreferedTime = "appPreferedTime";
            public const string AppRecevierEmail = "appRecevierEmail";
            public const string AppBillReceiverName = "appBillReceiverName";
            public const string AppBillReceiverAddress = "appBillReceiverAddress";
            public const string AppBillReceiverContactNo1 = "appBillReceiverContactNo1";
            public const string AppBillReceiverContactNo2 = "appBillReceiverContactNo2";
            public const string AppBillRecevierEmail = "appBillRecevierEmail";
            public const string AppBillReceiverPIN = "appBillReceiverPIN";
            public const string AppReceiverPIN = "appReceiverPIN";
            public const string AppPaymentMode = "appPaymentMode";
            public const string AppPaymentStatus = "appPaymentStatus";
            public const string AppTransactionID = "appTransactionID";
            public const string AppReceiverCityID = "appReceiverCityID";
            public const string AppReceiverCountryID = "appReceiverCountryID";
            public const string AppReceiverStateID = "appReceiverStateID";
            public const string AppBillReceiverCountryID = "appBillReceiverCountryID";
            public const string AppBillReceiverStateID = "appBillReceiverStateID";
            public const string AppBillReceiverCityID = "appBillReceiverCityID";
            public const string AppBankRefNo = "appBankRefNo";
            public const string AppPaymentType = "appPaymentType";
            public const string AppCardName = "appCardName";
            public const string AppCurrency = "appCurrency";
            public const string AppShipmentID = "appShipmentID";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppOrderID] = _tblOrder.PropertyNames.AppOrderID;
					ht[AppOrderNo] = _tblOrder.PropertyNames.AppOrderNo;
					ht[AppCustomerID] = _tblOrder.PropertyNames.AppCustomerID;
					ht[AppCreatedDate] = _tblOrder.PropertyNames.AppCreatedDate;
					ht[AppOrderStatusID] = _tblOrder.PropertyNames.AppOrderStatusID;
					ht[AppOrderAmount] = _tblOrder.PropertyNames.AppOrderAmount;
					ht[AppOrderStatusChangeDate] = _tblOrder.PropertyNames.AppOrderStatusChangeDate;
					ht[AppReceiverName] = _tblOrder.PropertyNames.AppReceiverName;
					ht[AppReceiverAddress] = _tblOrder.PropertyNames.AppReceiverAddress;
					ht[AppReceiverContactNo1] = _tblOrder.PropertyNames.AppReceiverContactNo1;
					ht[AppReceiverContactNo2] = _tblOrder.PropertyNames.AppReceiverContactNo2;
					ht[AppPreferedTime] = _tblOrder.PropertyNames.AppPreferedTime;
					ht[AppRecevierEmail] = _tblOrder.PropertyNames.AppRecevierEmail;
					ht[AppBillReceiverName] = _tblOrder.PropertyNames.AppBillReceiverName;
					ht[AppBillReceiverAddress] = _tblOrder.PropertyNames.AppBillReceiverAddress;
					ht[AppBillReceiverContactNo1] = _tblOrder.PropertyNames.AppBillReceiverContactNo1;
					ht[AppBillReceiverContactNo2] = _tblOrder.PropertyNames.AppBillReceiverContactNo2;
					ht[AppBillRecevierEmail] = _tblOrder.PropertyNames.AppBillRecevierEmail;
					ht[AppBillReceiverPIN] = _tblOrder.PropertyNames.AppBillReceiverPIN;
					ht[AppReceiverPIN] = _tblOrder.PropertyNames.AppReceiverPIN;
					ht[AppPaymentMode] = _tblOrder.PropertyNames.AppPaymentMode;
					ht[AppPaymentStatus] = _tblOrder.PropertyNames.AppPaymentStatus;
					ht[AppTransactionID] = _tblOrder.PropertyNames.AppTransactionID;
					ht[AppReceiverCityID] = _tblOrder.PropertyNames.AppReceiverCityID;
					ht[AppReceiverCountryID] = _tblOrder.PropertyNames.AppReceiverCountryID;
					ht[AppReceiverStateID] = _tblOrder.PropertyNames.AppReceiverStateID;
					ht[AppBillReceiverCountryID] = _tblOrder.PropertyNames.AppBillReceiverCountryID;
					ht[AppBillReceiverStateID] = _tblOrder.PropertyNames.AppBillReceiverStateID;
					ht[AppBillReceiverCityID] = _tblOrder.PropertyNames.AppBillReceiverCityID;
					ht[AppBankRefNo] = _tblOrder.PropertyNames.AppBankRefNo;
					ht[AppPaymentType] = _tblOrder.PropertyNames.AppPaymentType;
					ht[AppCardName] = _tblOrder.PropertyNames.AppCardName;
					ht[AppCurrency] = _tblOrder.PropertyNames.AppCurrency;
					ht[AppShipmentID] = _tblOrder.PropertyNames.AppShipmentID;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string AppOrderID = "AppOrderID";
            public const string AppOrderNo = "AppOrderNo";
            public const string AppCustomerID = "AppCustomerID";
            public const string AppCreatedDate = "AppCreatedDate";
            public const string AppOrderStatusID = "AppOrderStatusID";
            public const string AppOrderAmount = "AppOrderAmount";
            public const string AppOrderStatusChangeDate = "AppOrderStatusChangeDate";
            public const string AppReceiverName = "AppReceiverName";
            public const string AppReceiverAddress = "AppReceiverAddress";
            public const string AppReceiverContactNo1 = "AppReceiverContactNo1";
            public const string AppReceiverContactNo2 = "AppReceiverContactNo2";
            public const string AppPreferedTime = "AppPreferedTime";
            public const string AppRecevierEmail = "AppRecevierEmail";
            public const string AppBillReceiverName = "AppBillReceiverName";
            public const string AppBillReceiverAddress = "AppBillReceiverAddress";
            public const string AppBillReceiverContactNo1 = "AppBillReceiverContactNo1";
            public const string AppBillReceiverContactNo2 = "AppBillReceiverContactNo2";
            public const string AppBillRecevierEmail = "AppBillRecevierEmail";
            public const string AppBillReceiverPIN = "AppBillReceiverPIN";
            public const string AppReceiverPIN = "AppReceiverPIN";
            public const string AppPaymentMode = "AppPaymentMode";
            public const string AppPaymentStatus = "AppPaymentStatus";
            public const string AppTransactionID = "AppTransactionID";
            public const string AppReceiverCityID = "AppReceiverCityID";
            public const string AppReceiverCountryID = "AppReceiverCountryID";
            public const string AppReceiverStateID = "AppReceiverStateID";
            public const string AppBillReceiverCountryID = "AppBillReceiverCountryID";
            public const string AppBillReceiverStateID = "AppBillReceiverStateID";
            public const string AppBillReceiverCityID = "AppBillReceiverCityID";
            public const string AppBankRefNo = "AppBankRefNo";
            public const string AppPaymentType = "AppPaymentType";
            public const string AppCardName = "AppCardName";
            public const string AppCurrency = "AppCurrency";
            public const string AppShipmentID = "AppShipmentID";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppOrderID] = _tblOrder.ColumnNames.AppOrderID;
					ht[AppOrderNo] = _tblOrder.ColumnNames.AppOrderNo;
					ht[AppCustomerID] = _tblOrder.ColumnNames.AppCustomerID;
					ht[AppCreatedDate] = _tblOrder.ColumnNames.AppCreatedDate;
					ht[AppOrderStatusID] = _tblOrder.ColumnNames.AppOrderStatusID;
					ht[AppOrderAmount] = _tblOrder.ColumnNames.AppOrderAmount;
					ht[AppOrderStatusChangeDate] = _tblOrder.ColumnNames.AppOrderStatusChangeDate;
					ht[AppReceiverName] = _tblOrder.ColumnNames.AppReceiverName;
					ht[AppReceiverAddress] = _tblOrder.ColumnNames.AppReceiverAddress;
					ht[AppReceiverContactNo1] = _tblOrder.ColumnNames.AppReceiverContactNo1;
					ht[AppReceiverContactNo2] = _tblOrder.ColumnNames.AppReceiverContactNo2;
					ht[AppPreferedTime] = _tblOrder.ColumnNames.AppPreferedTime;
					ht[AppRecevierEmail] = _tblOrder.ColumnNames.AppRecevierEmail;
					ht[AppBillReceiverName] = _tblOrder.ColumnNames.AppBillReceiverName;
					ht[AppBillReceiverAddress] = _tblOrder.ColumnNames.AppBillReceiverAddress;
					ht[AppBillReceiverContactNo1] = _tblOrder.ColumnNames.AppBillReceiverContactNo1;
					ht[AppBillReceiverContactNo2] = _tblOrder.ColumnNames.AppBillReceiverContactNo2;
					ht[AppBillRecevierEmail] = _tblOrder.ColumnNames.AppBillRecevierEmail;
					ht[AppBillReceiverPIN] = _tblOrder.ColumnNames.AppBillReceiverPIN;
					ht[AppReceiverPIN] = _tblOrder.ColumnNames.AppReceiverPIN;
					ht[AppPaymentMode] = _tblOrder.ColumnNames.AppPaymentMode;
					ht[AppPaymentStatus] = _tblOrder.ColumnNames.AppPaymentStatus;
					ht[AppTransactionID] = _tblOrder.ColumnNames.AppTransactionID;
					ht[AppReceiverCityID] = _tblOrder.ColumnNames.AppReceiverCityID;
					ht[AppReceiverCountryID] = _tblOrder.ColumnNames.AppReceiverCountryID;
					ht[AppReceiverStateID] = _tblOrder.ColumnNames.AppReceiverStateID;
					ht[AppBillReceiverCountryID] = _tblOrder.ColumnNames.AppBillReceiverCountryID;
					ht[AppBillReceiverStateID] = _tblOrder.ColumnNames.AppBillReceiverStateID;
					ht[AppBillReceiverCityID] = _tblOrder.ColumnNames.AppBillReceiverCityID;
					ht[AppBankRefNo] = _tblOrder.ColumnNames.AppBankRefNo;
					ht[AppPaymentType] = _tblOrder.ColumnNames.AppPaymentType;
					ht[AppCardName] = _tblOrder.ColumnNames.AppCardName;
					ht[AppCurrency] = _tblOrder.ColumnNames.AppCurrency;
					ht[AppShipmentID] = _tblOrder.ColumnNames.AppShipmentID;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string AppOrderID = "s_AppOrderID";
            public const string AppOrderNo = "s_AppOrderNo";
            public const string AppCustomerID = "s_AppCustomerID";
            public const string AppCreatedDate = "s_AppCreatedDate";
            public const string AppOrderStatusID = "s_AppOrderStatusID";
            public const string AppOrderAmount = "s_AppOrderAmount";
            public const string AppOrderStatusChangeDate = "s_AppOrderStatusChangeDate";
            public const string AppReceiverName = "s_AppReceiverName";
            public const string AppReceiverAddress = "s_AppReceiverAddress";
            public const string AppReceiverContactNo1 = "s_AppReceiverContactNo1";
            public const string AppReceiverContactNo2 = "s_AppReceiverContactNo2";
            public const string AppPreferedTime = "s_AppPreferedTime";
            public const string AppRecevierEmail = "s_AppRecevierEmail";
            public const string AppBillReceiverName = "s_AppBillReceiverName";
            public const string AppBillReceiverAddress = "s_AppBillReceiverAddress";
            public const string AppBillReceiverContactNo1 = "s_AppBillReceiverContactNo1";
            public const string AppBillReceiverContactNo2 = "s_AppBillReceiverContactNo2";
            public const string AppBillRecevierEmail = "s_AppBillRecevierEmail";
            public const string AppBillReceiverPIN = "s_AppBillReceiverPIN";
            public const string AppReceiverPIN = "s_AppReceiverPIN";
            public const string AppPaymentMode = "s_AppPaymentMode";
            public const string AppPaymentStatus = "s_AppPaymentStatus";
            public const string AppTransactionID = "s_AppTransactionID";
            public const string AppReceiverCityID = "s_AppReceiverCityID";
            public const string AppReceiverCountryID = "s_AppReceiverCountryID";
            public const string AppReceiverStateID = "s_AppReceiverStateID";
            public const string AppBillReceiverCountryID = "s_AppBillReceiverCountryID";
            public const string AppBillReceiverStateID = "s_AppBillReceiverStateID";
            public const string AppBillReceiverCityID = "s_AppBillReceiverCityID";
            public const string AppBankRefNo = "s_AppBankRefNo";
            public const string AppPaymentType = "s_AppPaymentType";
            public const string AppCardName = "s_AppCardName";
            public const string AppCurrency = "s_AppCurrency";
            public const string AppShipmentID = "s_AppShipmentID";

		}
		#endregion		
		
		#region Properties
	
		public virtual int AppOrderID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppOrderID);
			}
			set
	        {
				base.Setint(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string AppOrderNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppOrderNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppOrderNo, value);
			}
		}

		public virtual int AppCustomerID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppCustomerID);
			}
			set
	        {
				base.Setint(ColumnNames.AppCustomerID, value);
			}
		}

		public virtual DateTime AppCreatedDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppCreatedDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppCreatedDate, value);
			}
		}

		public virtual int AppOrderStatusID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppOrderStatusID);
			}
			set
	        {
				base.Setint(ColumnNames.AppOrderStatusID, value);
			}
		}

		public virtual decimal AppOrderAmount
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppOrderAmount);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppOrderAmount, value);
			}
		}

		public virtual DateTime AppOrderStatusChangeDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppOrderStatusChangeDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppOrderStatusChangeDate, value);
			}
		}

		public virtual string AppReceiverName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReceiverName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReceiverName, value);
			}
		}

		public virtual string AppReceiverAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReceiverAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReceiverAddress, value);
			}
		}

		public virtual string AppReceiverContactNo1
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReceiverContactNo1);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReceiverContactNo1, value);
			}
		}

		public virtual string AppReceiverContactNo2
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReceiverContactNo2);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReceiverContactNo2, value);
			}
		}

		public virtual string AppPreferedTime
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPreferedTime);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPreferedTime, value);
			}
		}

		public virtual string AppRecevierEmail
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppRecevierEmail);
			}
			set
	        {
				base.Setstring(ColumnNames.AppRecevierEmail, value);
			}
		}

		public virtual string AppBillReceiverName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillReceiverName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillReceiverName, value);
			}
		}

		public virtual string AppBillReceiverAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillReceiverAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillReceiverAddress, value);
			}
		}

		public virtual string AppBillReceiverContactNo1
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillReceiverContactNo1);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillReceiverContactNo1, value);
			}
		}

		public virtual string AppBillReceiverContactNo2
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillReceiverContactNo2);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillReceiverContactNo2, value);
			}
		}

		public virtual string AppBillRecevierEmail
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillRecevierEmail);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillRecevierEmail, value);
			}
		}

		public virtual string AppBillReceiverPIN
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBillReceiverPIN);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBillReceiverPIN, value);
			}
		}

		public virtual string AppReceiverPIN
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppReceiverPIN);
			}
			set
	        {
				base.Setstring(ColumnNames.AppReceiverPIN, value);
			}
		}

		public virtual int AppPaymentMode
	    {
			get
	        {
				return base.Getint(ColumnNames.AppPaymentMode);
			}
			set
	        {
				base.Setint(ColumnNames.AppPaymentMode, value);
			}
		}

		public virtual int AppPaymentStatus
	    {
			get
	        {
				return base.Getint(ColumnNames.AppPaymentStatus);
			}
			set
	        {
				base.Setint(ColumnNames.AppPaymentStatus, value);
			}
		}

		public virtual string AppTransactionID
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppTransactionID);
			}
			set
	        {
				base.Setstring(ColumnNames.AppTransactionID, value);
			}
		}

		public virtual int AppReceiverCityID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppReceiverCityID);
			}
			set
	        {
				base.Setint(ColumnNames.AppReceiverCityID, value);
			}
		}

		public virtual int AppReceiverCountryID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppReceiverCountryID);
			}
			set
	        {
				base.Setint(ColumnNames.AppReceiverCountryID, value);
			}
		}

		public virtual int AppReceiverStateID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppReceiverStateID);
			}
			set
	        {
				base.Setint(ColumnNames.AppReceiverStateID, value);
			}
		}

		public virtual int AppBillReceiverCountryID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppBillReceiverCountryID);
			}
			set
	        {
				base.Setint(ColumnNames.AppBillReceiverCountryID, value);
			}
		}

		public virtual int AppBillReceiverStateID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppBillReceiverStateID);
			}
			set
	        {
				base.Setint(ColumnNames.AppBillReceiverStateID, value);
			}
		}

		public virtual int AppBillReceiverCityID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppBillReceiverCityID);
			}
			set
	        {
				base.Setint(ColumnNames.AppBillReceiverCityID, value);
			}
		}

		public virtual string AppBankRefNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBankRefNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBankRefNo, value);
			}
		}

		public virtual string AppPaymentType
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppPaymentType);
			}
			set
	        {
				base.Setstring(ColumnNames.AppPaymentType, value);
			}
		}

		public virtual string AppCardName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppCardName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppCardName, value);
			}
		}

		public virtual string AppCurrency
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppCurrency);
			}
			set
	        {
				base.Setstring(ColumnNames.AppCurrency, value);
			}
		}

		public virtual string AppShipmentID
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppShipmentID);
			}
			set
	        {
				base.Setstring(ColumnNames.AppShipmentID, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_AppOrderID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderID) ? string.Empty : base.GetintAsString(ColumnNames.AppOrderID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderID);
				else
					this.AppOrderID = base.SetintAsString(ColumnNames.AppOrderID, value);
			}
		}

		public virtual string s_AppOrderNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppOrderNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderNo);
				else
					this.AppOrderNo = base.SetstringAsString(ColumnNames.AppOrderNo, value);
			}
		}

		public virtual string s_AppCustomerID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCustomerID) ? string.Empty : base.GetintAsString(ColumnNames.AppCustomerID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCustomerID);
				else
					this.AppCustomerID = base.SetintAsString(ColumnNames.AppCustomerID, value);
			}
		}

		public virtual string s_AppCreatedDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCreatedDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppCreatedDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCreatedDate);
				else
					this.AppCreatedDate = base.SetDateTimeAsString(ColumnNames.AppCreatedDate, value);
			}
		}

		public virtual string s_AppOrderStatusID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderStatusID) ? string.Empty : base.GetintAsString(ColumnNames.AppOrderStatusID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderStatusID);
				else
					this.AppOrderStatusID = base.SetintAsString(ColumnNames.AppOrderStatusID, value);
			}
		}

		public virtual string s_AppOrderAmount
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderAmount) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppOrderAmount);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderAmount);
				else
					this.AppOrderAmount = base.SetdecimalAsString(ColumnNames.AppOrderAmount, value);
			}
		}

		public virtual string s_AppOrderStatusChangeDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppOrderStatusChangeDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppOrderStatusChangeDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppOrderStatusChangeDate);
				else
					this.AppOrderStatusChangeDate = base.SetDateTimeAsString(ColumnNames.AppOrderStatusChangeDate, value);
			}
		}

		public virtual string s_AppReceiverName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverName) ? string.Empty : base.GetstringAsString(ColumnNames.AppReceiverName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverName);
				else
					this.AppReceiverName = base.SetstringAsString(ColumnNames.AppReceiverName, value);
			}
		}

		public virtual string s_AppReceiverAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverAddress) ? string.Empty : base.GetstringAsString(ColumnNames.AppReceiverAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverAddress);
				else
					this.AppReceiverAddress = base.SetstringAsString(ColumnNames.AppReceiverAddress, value);
			}
		}

		public virtual string s_AppReceiverContactNo1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverContactNo1) ? string.Empty : base.GetstringAsString(ColumnNames.AppReceiverContactNo1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverContactNo1);
				else
					this.AppReceiverContactNo1 = base.SetstringAsString(ColumnNames.AppReceiverContactNo1, value);
			}
		}

		public virtual string s_AppReceiverContactNo2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverContactNo2) ? string.Empty : base.GetstringAsString(ColumnNames.AppReceiverContactNo2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverContactNo2);
				else
					this.AppReceiverContactNo2 = base.SetstringAsString(ColumnNames.AppReceiverContactNo2, value);
			}
		}

		public virtual string s_AppPreferedTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPreferedTime) ? string.Empty : base.GetstringAsString(ColumnNames.AppPreferedTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPreferedTime);
				else
					this.AppPreferedTime = base.SetstringAsString(ColumnNames.AppPreferedTime, value);
			}
		}

		public virtual string s_AppRecevierEmail
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppRecevierEmail) ? string.Empty : base.GetstringAsString(ColumnNames.AppRecevierEmail);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppRecevierEmail);
				else
					this.AppRecevierEmail = base.SetstringAsString(ColumnNames.AppRecevierEmail, value);
			}
		}

		public virtual string s_AppBillReceiverName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverName) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillReceiverName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverName);
				else
					this.AppBillReceiverName = base.SetstringAsString(ColumnNames.AppBillReceiverName, value);
			}
		}

		public virtual string s_AppBillReceiverAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverAddress) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillReceiverAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverAddress);
				else
					this.AppBillReceiverAddress = base.SetstringAsString(ColumnNames.AppBillReceiverAddress, value);
			}
		}

		public virtual string s_AppBillReceiverContactNo1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverContactNo1) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillReceiverContactNo1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverContactNo1);
				else
					this.AppBillReceiverContactNo1 = base.SetstringAsString(ColumnNames.AppBillReceiverContactNo1, value);
			}
		}

		public virtual string s_AppBillReceiverContactNo2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverContactNo2) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillReceiverContactNo2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverContactNo2);
				else
					this.AppBillReceiverContactNo2 = base.SetstringAsString(ColumnNames.AppBillReceiverContactNo2, value);
			}
		}

		public virtual string s_AppBillRecevierEmail
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillRecevierEmail) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillRecevierEmail);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillRecevierEmail);
				else
					this.AppBillRecevierEmail = base.SetstringAsString(ColumnNames.AppBillRecevierEmail, value);
			}
		}

		public virtual string s_AppBillReceiverPIN
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverPIN) ? string.Empty : base.GetstringAsString(ColumnNames.AppBillReceiverPIN);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverPIN);
				else
					this.AppBillReceiverPIN = base.SetstringAsString(ColumnNames.AppBillReceiverPIN, value);
			}
		}

		public virtual string s_AppReceiverPIN
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverPIN) ? string.Empty : base.GetstringAsString(ColumnNames.AppReceiverPIN);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverPIN);
				else
					this.AppReceiverPIN = base.SetstringAsString(ColumnNames.AppReceiverPIN, value);
			}
		}

		public virtual string s_AppPaymentMode
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPaymentMode) ? string.Empty : base.GetintAsString(ColumnNames.AppPaymentMode);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPaymentMode);
				else
					this.AppPaymentMode = base.SetintAsString(ColumnNames.AppPaymentMode, value);
			}
		}

		public virtual string s_AppPaymentStatus
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPaymentStatus) ? string.Empty : base.GetintAsString(ColumnNames.AppPaymentStatus);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPaymentStatus);
				else
					this.AppPaymentStatus = base.SetintAsString(ColumnNames.AppPaymentStatus, value);
			}
		}

		public virtual string s_AppTransactionID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppTransactionID) ? string.Empty : base.GetstringAsString(ColumnNames.AppTransactionID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppTransactionID);
				else
					this.AppTransactionID = base.SetstringAsString(ColumnNames.AppTransactionID, value);
			}
		}

		public virtual string s_AppReceiverCityID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverCityID) ? string.Empty : base.GetintAsString(ColumnNames.AppReceiverCityID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverCityID);
				else
					this.AppReceiverCityID = base.SetintAsString(ColumnNames.AppReceiverCityID, value);
			}
		}

		public virtual string s_AppReceiverCountryID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverCountryID) ? string.Empty : base.GetintAsString(ColumnNames.AppReceiverCountryID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverCountryID);
				else
					this.AppReceiverCountryID = base.SetintAsString(ColumnNames.AppReceiverCountryID, value);
			}
		}

		public virtual string s_AppReceiverStateID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppReceiverStateID) ? string.Empty : base.GetintAsString(ColumnNames.AppReceiverStateID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppReceiverStateID);
				else
					this.AppReceiverStateID = base.SetintAsString(ColumnNames.AppReceiverStateID, value);
			}
		}

		public virtual string s_AppBillReceiverCountryID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverCountryID) ? string.Empty : base.GetintAsString(ColumnNames.AppBillReceiverCountryID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverCountryID);
				else
					this.AppBillReceiverCountryID = base.SetintAsString(ColumnNames.AppBillReceiverCountryID, value);
			}
		}

		public virtual string s_AppBillReceiverStateID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverStateID) ? string.Empty : base.GetintAsString(ColumnNames.AppBillReceiverStateID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverStateID);
				else
					this.AppBillReceiverStateID = base.SetintAsString(ColumnNames.AppBillReceiverStateID, value);
			}
		}

		public virtual string s_AppBillReceiverCityID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBillReceiverCityID) ? string.Empty : base.GetintAsString(ColumnNames.AppBillReceiverCityID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBillReceiverCityID);
				else
					this.AppBillReceiverCityID = base.SetintAsString(ColumnNames.AppBillReceiverCityID, value);
			}
		}

		public virtual string s_AppBankRefNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBankRefNo) ? string.Empty : base.GetstringAsString(ColumnNames.AppBankRefNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBankRefNo);
				else
					this.AppBankRefNo = base.SetstringAsString(ColumnNames.AppBankRefNo, value);
			}
		}

		public virtual string s_AppPaymentType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppPaymentType) ? string.Empty : base.GetstringAsString(ColumnNames.AppPaymentType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppPaymentType);
				else
					this.AppPaymentType = base.SetstringAsString(ColumnNames.AppPaymentType, value);
			}
		}

		public virtual string s_AppCardName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCardName) ? string.Empty : base.GetstringAsString(ColumnNames.AppCardName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCardName);
				else
					this.AppCardName = base.SetstringAsString(ColumnNames.AppCardName, value);
			}
		}

		public virtual string s_AppCurrency
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCurrency) ? string.Empty : base.GetstringAsString(ColumnNames.AppCurrency);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCurrency);
				else
					this.AppCurrency = base.SetstringAsString(ColumnNames.AppCurrency, value);
			}
		}

		public virtual string s_AppShipmentID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppShipmentID) ? string.Empty : base.GetstringAsString(ColumnNames.AppShipmentID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppShipmentID);
				else
					this.AppShipmentID = base.SetstringAsString(ColumnNames.AppShipmentID, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter AppOrderID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderNo, Parameters.AppOrderNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCustomerID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCustomerID, Parameters.AppCustomerID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCreatedDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCreatedDate, Parameters.AppCreatedDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderStatusID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderStatusID, Parameters.AppOrderStatusID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderAmount
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderAmount, Parameters.AppOrderAmount);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppOrderStatusChangeDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppOrderStatusChangeDate, Parameters.AppOrderStatusChangeDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverName, Parameters.AppReceiverName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverAddress, Parameters.AppReceiverAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverContactNo1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverContactNo1, Parameters.AppReceiverContactNo1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverContactNo2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverContactNo2, Parameters.AppReceiverContactNo2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPreferedTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPreferedTime, Parameters.AppPreferedTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppRecevierEmail
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppRecevierEmail, Parameters.AppRecevierEmail);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverName, Parameters.AppBillReceiverName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverAddress, Parameters.AppBillReceiverAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverContactNo1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverContactNo1, Parameters.AppBillReceiverContactNo1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverContactNo2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverContactNo2, Parameters.AppBillReceiverContactNo2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillRecevierEmail
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillRecevierEmail, Parameters.AppBillRecevierEmail);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverPIN
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverPIN, Parameters.AppBillReceiverPIN);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverPIN
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverPIN, Parameters.AppReceiverPIN);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPaymentMode
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPaymentMode, Parameters.AppPaymentMode);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPaymentStatus
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPaymentStatus, Parameters.AppPaymentStatus);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppTransactionID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppTransactionID, Parameters.AppTransactionID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverCityID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverCityID, Parameters.AppReceiverCityID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverCountryID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverCountryID, Parameters.AppReceiverCountryID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppReceiverStateID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppReceiverStateID, Parameters.AppReceiverStateID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverCountryID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverCountryID, Parameters.AppBillReceiverCountryID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverStateID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverStateID, Parameters.AppBillReceiverStateID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBillReceiverCityID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBillReceiverCityID, Parameters.AppBillReceiverCityID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBankRefNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBankRefNo, Parameters.AppBankRefNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppPaymentType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppPaymentType, Parameters.AppPaymentType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCardName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCardName, Parameters.AppCardName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCurrency
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCurrency, Parameters.AppCurrency);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppShipmentID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppShipmentID, Parameters.AppShipmentID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public WhereParameter AppOrderNo
		    {
				get
		        {
					if(_AppOrderNo_W == null)
	        	    {
						_AppOrderNo_W = TearOff.AppOrderNo;
					}
					return _AppOrderNo_W;
				}
			}

			public WhereParameter AppCustomerID
		    {
				get
		        {
					if(_AppCustomerID_W == null)
	        	    {
						_AppCustomerID_W = TearOff.AppCustomerID;
					}
					return _AppCustomerID_W;
				}
			}

			public WhereParameter AppCreatedDate
		    {
				get
		        {
					if(_AppCreatedDate_W == null)
	        	    {
						_AppCreatedDate_W = TearOff.AppCreatedDate;
					}
					return _AppCreatedDate_W;
				}
			}

			public WhereParameter AppOrderStatusID
		    {
				get
		        {
					if(_AppOrderStatusID_W == null)
	        	    {
						_AppOrderStatusID_W = TearOff.AppOrderStatusID;
					}
					return _AppOrderStatusID_W;
				}
			}

			public WhereParameter AppOrderAmount
		    {
				get
		        {
					if(_AppOrderAmount_W == null)
	        	    {
						_AppOrderAmount_W = TearOff.AppOrderAmount;
					}
					return _AppOrderAmount_W;
				}
			}

			public WhereParameter AppOrderStatusChangeDate
		    {
				get
		        {
					if(_AppOrderStatusChangeDate_W == null)
	        	    {
						_AppOrderStatusChangeDate_W = TearOff.AppOrderStatusChangeDate;
					}
					return _AppOrderStatusChangeDate_W;
				}
			}

			public WhereParameter AppReceiverName
		    {
				get
		        {
					if(_AppReceiverName_W == null)
	        	    {
						_AppReceiverName_W = TearOff.AppReceiverName;
					}
					return _AppReceiverName_W;
				}
			}

			public WhereParameter AppReceiverAddress
		    {
				get
		        {
					if(_AppReceiverAddress_W == null)
	        	    {
						_AppReceiverAddress_W = TearOff.AppReceiverAddress;
					}
					return _AppReceiverAddress_W;
				}
			}

			public WhereParameter AppReceiverContactNo1
		    {
				get
		        {
					if(_AppReceiverContactNo1_W == null)
	        	    {
						_AppReceiverContactNo1_W = TearOff.AppReceiverContactNo1;
					}
					return _AppReceiverContactNo1_W;
				}
			}

			public WhereParameter AppReceiverContactNo2
		    {
				get
		        {
					if(_AppReceiverContactNo2_W == null)
	        	    {
						_AppReceiverContactNo2_W = TearOff.AppReceiverContactNo2;
					}
					return _AppReceiverContactNo2_W;
				}
			}

			public WhereParameter AppPreferedTime
		    {
				get
		        {
					if(_AppPreferedTime_W == null)
	        	    {
						_AppPreferedTime_W = TearOff.AppPreferedTime;
					}
					return _AppPreferedTime_W;
				}
			}

			public WhereParameter AppRecevierEmail
		    {
				get
		        {
					if(_AppRecevierEmail_W == null)
	        	    {
						_AppRecevierEmail_W = TearOff.AppRecevierEmail;
					}
					return _AppRecevierEmail_W;
				}
			}

			public WhereParameter AppBillReceiverName
		    {
				get
		        {
					if(_AppBillReceiverName_W == null)
	        	    {
						_AppBillReceiverName_W = TearOff.AppBillReceiverName;
					}
					return _AppBillReceiverName_W;
				}
			}

			public WhereParameter AppBillReceiverAddress
		    {
				get
		        {
					if(_AppBillReceiverAddress_W == null)
	        	    {
						_AppBillReceiverAddress_W = TearOff.AppBillReceiverAddress;
					}
					return _AppBillReceiverAddress_W;
				}
			}

			public WhereParameter AppBillReceiverContactNo1
		    {
				get
		        {
					if(_AppBillReceiverContactNo1_W == null)
	        	    {
						_AppBillReceiverContactNo1_W = TearOff.AppBillReceiverContactNo1;
					}
					return _AppBillReceiverContactNo1_W;
				}
			}

			public WhereParameter AppBillReceiverContactNo2
		    {
				get
		        {
					if(_AppBillReceiverContactNo2_W == null)
	        	    {
						_AppBillReceiverContactNo2_W = TearOff.AppBillReceiverContactNo2;
					}
					return _AppBillReceiverContactNo2_W;
				}
			}

			public WhereParameter AppBillRecevierEmail
		    {
				get
		        {
					if(_AppBillRecevierEmail_W == null)
	        	    {
						_AppBillRecevierEmail_W = TearOff.AppBillRecevierEmail;
					}
					return _AppBillRecevierEmail_W;
				}
			}

			public WhereParameter AppBillReceiverPIN
		    {
				get
		        {
					if(_AppBillReceiverPIN_W == null)
	        	    {
						_AppBillReceiverPIN_W = TearOff.AppBillReceiverPIN;
					}
					return _AppBillReceiverPIN_W;
				}
			}

			public WhereParameter AppReceiverPIN
		    {
				get
		        {
					if(_AppReceiverPIN_W == null)
	        	    {
						_AppReceiverPIN_W = TearOff.AppReceiverPIN;
					}
					return _AppReceiverPIN_W;
				}
			}

			public WhereParameter AppPaymentMode
		    {
				get
		        {
					if(_AppPaymentMode_W == null)
	        	    {
						_AppPaymentMode_W = TearOff.AppPaymentMode;
					}
					return _AppPaymentMode_W;
				}
			}

			public WhereParameter AppPaymentStatus
		    {
				get
		        {
					if(_AppPaymentStatus_W == null)
	        	    {
						_AppPaymentStatus_W = TearOff.AppPaymentStatus;
					}
					return _AppPaymentStatus_W;
				}
			}

			public WhereParameter AppTransactionID
		    {
				get
		        {
					if(_AppTransactionID_W == null)
	        	    {
						_AppTransactionID_W = TearOff.AppTransactionID;
					}
					return _AppTransactionID_W;
				}
			}

			public WhereParameter AppReceiverCityID
		    {
				get
		        {
					if(_AppReceiverCityID_W == null)
	        	    {
						_AppReceiverCityID_W = TearOff.AppReceiverCityID;
					}
					return _AppReceiverCityID_W;
				}
			}

			public WhereParameter AppReceiverCountryID
		    {
				get
		        {
					if(_AppReceiverCountryID_W == null)
	        	    {
						_AppReceiverCountryID_W = TearOff.AppReceiverCountryID;
					}
					return _AppReceiverCountryID_W;
				}
			}

			public WhereParameter AppReceiverStateID
		    {
				get
		        {
					if(_AppReceiverStateID_W == null)
	        	    {
						_AppReceiverStateID_W = TearOff.AppReceiverStateID;
					}
					return _AppReceiverStateID_W;
				}
			}

			public WhereParameter AppBillReceiverCountryID
		    {
				get
		        {
					if(_AppBillReceiverCountryID_W == null)
	        	    {
						_AppBillReceiverCountryID_W = TearOff.AppBillReceiverCountryID;
					}
					return _AppBillReceiverCountryID_W;
				}
			}

			public WhereParameter AppBillReceiverStateID
		    {
				get
		        {
					if(_AppBillReceiverStateID_W == null)
	        	    {
						_AppBillReceiverStateID_W = TearOff.AppBillReceiverStateID;
					}
					return _AppBillReceiverStateID_W;
				}
			}

			public WhereParameter AppBillReceiverCityID
		    {
				get
		        {
					if(_AppBillReceiverCityID_W == null)
	        	    {
						_AppBillReceiverCityID_W = TearOff.AppBillReceiverCityID;
					}
					return _AppBillReceiverCityID_W;
				}
			}

			public WhereParameter AppBankRefNo
		    {
				get
		        {
					if(_AppBankRefNo_W == null)
	        	    {
						_AppBankRefNo_W = TearOff.AppBankRefNo;
					}
					return _AppBankRefNo_W;
				}
			}

			public WhereParameter AppPaymentType
		    {
				get
		        {
					if(_AppPaymentType_W == null)
	        	    {
						_AppPaymentType_W = TearOff.AppPaymentType;
					}
					return _AppPaymentType_W;
				}
			}

			public WhereParameter AppCardName
		    {
				get
		        {
					if(_AppCardName_W == null)
	        	    {
						_AppCardName_W = TearOff.AppCardName;
					}
					return _AppCardName_W;
				}
			}

			public WhereParameter AppCurrency
		    {
				get
		        {
					if(_AppCurrency_W == null)
	        	    {
						_AppCurrency_W = TearOff.AppCurrency;
					}
					return _AppCurrency_W;
				}
			}

			public WhereParameter AppShipmentID
		    {
				get
		        {
					if(_AppShipmentID_W == null)
	        	    {
						_AppShipmentID_W = TearOff.AppShipmentID;
					}
					return _AppShipmentID_W;
				}
			}

			private WhereParameter _AppOrderID_W = null;
			private WhereParameter _AppOrderNo_W = null;
			private WhereParameter _AppCustomerID_W = null;
			private WhereParameter _AppCreatedDate_W = null;
			private WhereParameter _AppOrderStatusID_W = null;
			private WhereParameter _AppOrderAmount_W = null;
			private WhereParameter _AppOrderStatusChangeDate_W = null;
			private WhereParameter _AppReceiverName_W = null;
			private WhereParameter _AppReceiverAddress_W = null;
			private WhereParameter _AppReceiverContactNo1_W = null;
			private WhereParameter _AppReceiverContactNo2_W = null;
			private WhereParameter _AppPreferedTime_W = null;
			private WhereParameter _AppRecevierEmail_W = null;
			private WhereParameter _AppBillReceiverName_W = null;
			private WhereParameter _AppBillReceiverAddress_W = null;
			private WhereParameter _AppBillReceiverContactNo1_W = null;
			private WhereParameter _AppBillReceiverContactNo2_W = null;
			private WhereParameter _AppBillRecevierEmail_W = null;
			private WhereParameter _AppBillReceiverPIN_W = null;
			private WhereParameter _AppReceiverPIN_W = null;
			private WhereParameter _AppPaymentMode_W = null;
			private WhereParameter _AppPaymentStatus_W = null;
			private WhereParameter _AppTransactionID_W = null;
			private WhereParameter _AppReceiverCityID_W = null;
			private WhereParameter _AppReceiverCountryID_W = null;
			private WhereParameter _AppReceiverStateID_W = null;
			private WhereParameter _AppBillReceiverCountryID_W = null;
			private WhereParameter _AppBillReceiverStateID_W = null;
			private WhereParameter _AppBillReceiverCityID_W = null;
			private WhereParameter _AppBankRefNo_W = null;
			private WhereParameter _AppPaymentType_W = null;
			private WhereParameter _AppCardName_W = null;
			private WhereParameter _AppCurrency_W = null;
			private WhereParameter _AppShipmentID_W = null;

			public void WhereClauseReset()
			{
				_AppOrderID_W = null;
				_AppOrderNo_W = null;
				_AppCustomerID_W = null;
				_AppCreatedDate_W = null;
				_AppOrderStatusID_W = null;
				_AppOrderAmount_W = null;
				_AppOrderStatusChangeDate_W = null;
				_AppReceiverName_W = null;
				_AppReceiverAddress_W = null;
				_AppReceiverContactNo1_W = null;
				_AppReceiverContactNo2_W = null;
				_AppPreferedTime_W = null;
				_AppRecevierEmail_W = null;
				_AppBillReceiverName_W = null;
				_AppBillReceiverAddress_W = null;
				_AppBillReceiverContactNo1_W = null;
				_AppBillReceiverContactNo2_W = null;
				_AppBillRecevierEmail_W = null;
				_AppBillReceiverPIN_W = null;
				_AppReceiverPIN_W = null;
				_AppPaymentMode_W = null;
				_AppPaymentStatus_W = null;
				_AppTransactionID_W = null;
				_AppReceiverCityID_W = null;
				_AppReceiverCountryID_W = null;
				_AppReceiverStateID_W = null;
				_AppBillReceiverCountryID_W = null;
				_AppBillReceiverStateID_W = null;
				_AppBillReceiverCityID_W = null;
				_AppBankRefNo_W = null;
				_AppPaymentType_W = null;
				_AppCardName_W = null;
				_AppCurrency_W = null;
				_AppShipmentID_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter AppOrderID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderID, Parameters.AppOrderID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderNo, Parameters.AppOrderNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCustomerID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCustomerID, Parameters.AppCustomerID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCreatedDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCreatedDate, Parameters.AppCreatedDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderStatusID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderStatusID, Parameters.AppOrderStatusID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderAmount
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderAmount, Parameters.AppOrderAmount);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppOrderStatusChangeDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppOrderStatusChangeDate, Parameters.AppOrderStatusChangeDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverName, Parameters.AppReceiverName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverAddress, Parameters.AppReceiverAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverContactNo1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverContactNo1, Parameters.AppReceiverContactNo1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverContactNo2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverContactNo2, Parameters.AppReceiverContactNo2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPreferedTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPreferedTime, Parameters.AppPreferedTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppRecevierEmail
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppRecevierEmail, Parameters.AppRecevierEmail);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverName, Parameters.AppBillReceiverName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverAddress, Parameters.AppBillReceiverAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverContactNo1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverContactNo1, Parameters.AppBillReceiverContactNo1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverContactNo2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverContactNo2, Parameters.AppBillReceiverContactNo2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillRecevierEmail
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillRecevierEmail, Parameters.AppBillRecevierEmail);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverPIN
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverPIN, Parameters.AppBillReceiverPIN);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverPIN
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverPIN, Parameters.AppReceiverPIN);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPaymentMode
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPaymentMode, Parameters.AppPaymentMode);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPaymentStatus
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPaymentStatus, Parameters.AppPaymentStatus);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppTransactionID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppTransactionID, Parameters.AppTransactionID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverCityID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverCityID, Parameters.AppReceiverCityID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverCountryID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverCountryID, Parameters.AppReceiverCountryID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppReceiverStateID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppReceiverStateID, Parameters.AppReceiverStateID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverCountryID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverCountryID, Parameters.AppBillReceiverCountryID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverStateID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverStateID, Parameters.AppBillReceiverStateID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBillReceiverCityID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBillReceiverCityID, Parameters.AppBillReceiverCityID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBankRefNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBankRefNo, Parameters.AppBankRefNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppPaymentType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppPaymentType, Parameters.AppPaymentType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCardName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCardName, Parameters.AppCardName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCurrency
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCurrency, Parameters.AppCurrency);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppShipmentID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppShipmentID, Parameters.AppShipmentID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter AppOrderID
		    {
				get
		        {
					if(_AppOrderID_W == null)
	        	    {
						_AppOrderID_W = TearOff.AppOrderID;
					}
					return _AppOrderID_W;
				}
			}

			public AggregateParameter AppOrderNo
		    {
				get
		        {
					if(_AppOrderNo_W == null)
	        	    {
						_AppOrderNo_W = TearOff.AppOrderNo;
					}
					return _AppOrderNo_W;
				}
			}

			public AggregateParameter AppCustomerID
		    {
				get
		        {
					if(_AppCustomerID_W == null)
	        	    {
						_AppCustomerID_W = TearOff.AppCustomerID;
					}
					return _AppCustomerID_W;
				}
			}

			public AggregateParameter AppCreatedDate
		    {
				get
		        {
					if(_AppCreatedDate_W == null)
	        	    {
						_AppCreatedDate_W = TearOff.AppCreatedDate;
					}
					return _AppCreatedDate_W;
				}
			}

			public AggregateParameter AppOrderStatusID
		    {
				get
		        {
					if(_AppOrderStatusID_W == null)
	        	    {
						_AppOrderStatusID_W = TearOff.AppOrderStatusID;
					}
					return _AppOrderStatusID_W;
				}
			}

			public AggregateParameter AppOrderAmount
		    {
				get
		        {
					if(_AppOrderAmount_W == null)
	        	    {
						_AppOrderAmount_W = TearOff.AppOrderAmount;
					}
					return _AppOrderAmount_W;
				}
			}

			public AggregateParameter AppOrderStatusChangeDate
		    {
				get
		        {
					if(_AppOrderStatusChangeDate_W == null)
	        	    {
						_AppOrderStatusChangeDate_W = TearOff.AppOrderStatusChangeDate;
					}
					return _AppOrderStatusChangeDate_W;
				}
			}

			public AggregateParameter AppReceiverName
		    {
				get
		        {
					if(_AppReceiverName_W == null)
	        	    {
						_AppReceiverName_W = TearOff.AppReceiverName;
					}
					return _AppReceiverName_W;
				}
			}

			public AggregateParameter AppReceiverAddress
		    {
				get
		        {
					if(_AppReceiverAddress_W == null)
	        	    {
						_AppReceiverAddress_W = TearOff.AppReceiverAddress;
					}
					return _AppReceiverAddress_W;
				}
			}

			public AggregateParameter AppReceiverContactNo1
		    {
				get
		        {
					if(_AppReceiverContactNo1_W == null)
	        	    {
						_AppReceiverContactNo1_W = TearOff.AppReceiverContactNo1;
					}
					return _AppReceiverContactNo1_W;
				}
			}

			public AggregateParameter AppReceiverContactNo2
		    {
				get
		        {
					if(_AppReceiverContactNo2_W == null)
	        	    {
						_AppReceiverContactNo2_W = TearOff.AppReceiverContactNo2;
					}
					return _AppReceiverContactNo2_W;
				}
			}

			public AggregateParameter AppPreferedTime
		    {
				get
		        {
					if(_AppPreferedTime_W == null)
	        	    {
						_AppPreferedTime_W = TearOff.AppPreferedTime;
					}
					return _AppPreferedTime_W;
				}
			}

			public AggregateParameter AppRecevierEmail
		    {
				get
		        {
					if(_AppRecevierEmail_W == null)
	        	    {
						_AppRecevierEmail_W = TearOff.AppRecevierEmail;
					}
					return _AppRecevierEmail_W;
				}
			}

			public AggregateParameter AppBillReceiverName
		    {
				get
		        {
					if(_AppBillReceiverName_W == null)
	        	    {
						_AppBillReceiverName_W = TearOff.AppBillReceiverName;
					}
					return _AppBillReceiverName_W;
				}
			}

			public AggregateParameter AppBillReceiverAddress
		    {
				get
		        {
					if(_AppBillReceiverAddress_W == null)
	        	    {
						_AppBillReceiverAddress_W = TearOff.AppBillReceiverAddress;
					}
					return _AppBillReceiverAddress_W;
				}
			}

			public AggregateParameter AppBillReceiverContactNo1
		    {
				get
		        {
					if(_AppBillReceiverContactNo1_W == null)
	        	    {
						_AppBillReceiverContactNo1_W = TearOff.AppBillReceiverContactNo1;
					}
					return _AppBillReceiverContactNo1_W;
				}
			}

			public AggregateParameter AppBillReceiverContactNo2
		    {
				get
		        {
					if(_AppBillReceiverContactNo2_W == null)
	        	    {
						_AppBillReceiverContactNo2_W = TearOff.AppBillReceiverContactNo2;
					}
					return _AppBillReceiverContactNo2_W;
				}
			}

			public AggregateParameter AppBillRecevierEmail
		    {
				get
		        {
					if(_AppBillRecevierEmail_W == null)
	        	    {
						_AppBillRecevierEmail_W = TearOff.AppBillRecevierEmail;
					}
					return _AppBillRecevierEmail_W;
				}
			}

			public AggregateParameter AppBillReceiverPIN
		    {
				get
		        {
					if(_AppBillReceiverPIN_W == null)
	        	    {
						_AppBillReceiverPIN_W = TearOff.AppBillReceiverPIN;
					}
					return _AppBillReceiverPIN_W;
				}
			}

			public AggregateParameter AppReceiverPIN
		    {
				get
		        {
					if(_AppReceiverPIN_W == null)
	        	    {
						_AppReceiverPIN_W = TearOff.AppReceiverPIN;
					}
					return _AppReceiverPIN_W;
				}
			}

			public AggregateParameter AppPaymentMode
		    {
				get
		        {
					if(_AppPaymentMode_W == null)
	        	    {
						_AppPaymentMode_W = TearOff.AppPaymentMode;
					}
					return _AppPaymentMode_W;
				}
			}

			public AggregateParameter AppPaymentStatus
		    {
				get
		        {
					if(_AppPaymentStatus_W == null)
	        	    {
						_AppPaymentStatus_W = TearOff.AppPaymentStatus;
					}
					return _AppPaymentStatus_W;
				}
			}

			public AggregateParameter AppTransactionID
		    {
				get
		        {
					if(_AppTransactionID_W == null)
	        	    {
						_AppTransactionID_W = TearOff.AppTransactionID;
					}
					return _AppTransactionID_W;
				}
			}

			public AggregateParameter AppReceiverCityID
		    {
				get
		        {
					if(_AppReceiverCityID_W == null)
	        	    {
						_AppReceiverCityID_W = TearOff.AppReceiverCityID;
					}
					return _AppReceiverCityID_W;
				}
			}

			public AggregateParameter AppReceiverCountryID
		    {
				get
		        {
					if(_AppReceiverCountryID_W == null)
	        	    {
						_AppReceiverCountryID_W = TearOff.AppReceiverCountryID;
					}
					return _AppReceiverCountryID_W;
				}
			}

			public AggregateParameter AppReceiverStateID
		    {
				get
		        {
					if(_AppReceiverStateID_W == null)
	        	    {
						_AppReceiverStateID_W = TearOff.AppReceiverStateID;
					}
					return _AppReceiverStateID_W;
				}
			}

			public AggregateParameter AppBillReceiverCountryID
		    {
				get
		        {
					if(_AppBillReceiverCountryID_W == null)
	        	    {
						_AppBillReceiverCountryID_W = TearOff.AppBillReceiverCountryID;
					}
					return _AppBillReceiverCountryID_W;
				}
			}

			public AggregateParameter AppBillReceiverStateID
		    {
				get
		        {
					if(_AppBillReceiverStateID_W == null)
	        	    {
						_AppBillReceiverStateID_W = TearOff.AppBillReceiverStateID;
					}
					return _AppBillReceiverStateID_W;
				}
			}

			public AggregateParameter AppBillReceiverCityID
		    {
				get
		        {
					if(_AppBillReceiverCityID_W == null)
	        	    {
						_AppBillReceiverCityID_W = TearOff.AppBillReceiverCityID;
					}
					return _AppBillReceiverCityID_W;
				}
			}

			public AggregateParameter AppBankRefNo
		    {
				get
		        {
					if(_AppBankRefNo_W == null)
	        	    {
						_AppBankRefNo_W = TearOff.AppBankRefNo;
					}
					return _AppBankRefNo_W;
				}
			}

			public AggregateParameter AppPaymentType
		    {
				get
		        {
					if(_AppPaymentType_W == null)
	        	    {
						_AppPaymentType_W = TearOff.AppPaymentType;
					}
					return _AppPaymentType_W;
				}
			}

			public AggregateParameter AppCardName
		    {
				get
		        {
					if(_AppCardName_W == null)
	        	    {
						_AppCardName_W = TearOff.AppCardName;
					}
					return _AppCardName_W;
				}
			}

			public AggregateParameter AppCurrency
		    {
				get
		        {
					if(_AppCurrency_W == null)
	        	    {
						_AppCurrency_W = TearOff.AppCurrency;
					}
					return _AppCurrency_W;
				}
			}

			public AggregateParameter AppShipmentID
		    {
				get
		        {
					if(_AppShipmentID_W == null)
	        	    {
						_AppShipmentID_W = TearOff.AppShipmentID;
					}
					return _AppShipmentID_W;
				}
			}

			private AggregateParameter _AppOrderID_W = null;
			private AggregateParameter _AppOrderNo_W = null;
			private AggregateParameter _AppCustomerID_W = null;
			private AggregateParameter _AppCreatedDate_W = null;
			private AggregateParameter _AppOrderStatusID_W = null;
			private AggregateParameter _AppOrderAmount_W = null;
			private AggregateParameter _AppOrderStatusChangeDate_W = null;
			private AggregateParameter _AppReceiverName_W = null;
			private AggregateParameter _AppReceiverAddress_W = null;
			private AggregateParameter _AppReceiverContactNo1_W = null;
			private AggregateParameter _AppReceiverContactNo2_W = null;
			private AggregateParameter _AppPreferedTime_W = null;
			private AggregateParameter _AppRecevierEmail_W = null;
			private AggregateParameter _AppBillReceiverName_W = null;
			private AggregateParameter _AppBillReceiverAddress_W = null;
			private AggregateParameter _AppBillReceiverContactNo1_W = null;
			private AggregateParameter _AppBillReceiverContactNo2_W = null;
			private AggregateParameter _AppBillRecevierEmail_W = null;
			private AggregateParameter _AppBillReceiverPIN_W = null;
			private AggregateParameter _AppReceiverPIN_W = null;
			private AggregateParameter _AppPaymentMode_W = null;
			private AggregateParameter _AppPaymentStatus_W = null;
			private AggregateParameter _AppTransactionID_W = null;
			private AggregateParameter _AppReceiverCityID_W = null;
			private AggregateParameter _AppReceiverCountryID_W = null;
			private AggregateParameter _AppReceiverStateID_W = null;
			private AggregateParameter _AppBillReceiverCountryID_W = null;
			private AggregateParameter _AppBillReceiverStateID_W = null;
			private AggregateParameter _AppBillReceiverCityID_W = null;
			private AggregateParameter _AppBankRefNo_W = null;
			private AggregateParameter _AppPaymentType_W = null;
			private AggregateParameter _AppCardName_W = null;
			private AggregateParameter _AppCurrency_W = null;
			private AggregateParameter _AppShipmentID_W = null;

			public void AggregateClauseReset()
			{
				_AppOrderID_W = null;
				_AppOrderNo_W = null;
				_AppCustomerID_W = null;
				_AppCreatedDate_W = null;
				_AppOrderStatusID_W = null;
				_AppOrderAmount_W = null;
				_AppOrderStatusChangeDate_W = null;
				_AppReceiverName_W = null;
				_AppReceiverAddress_W = null;
				_AppReceiverContactNo1_W = null;
				_AppReceiverContactNo2_W = null;
				_AppPreferedTime_W = null;
				_AppRecevierEmail_W = null;
				_AppBillReceiverName_W = null;
				_AppBillReceiverAddress_W = null;
				_AppBillReceiverContactNo1_W = null;
				_AppBillReceiverContactNo2_W = null;
				_AppBillRecevierEmail_W = null;
				_AppBillReceiverPIN_W = null;
				_AppReceiverPIN_W = null;
				_AppPaymentMode_W = null;
				_AppPaymentStatus_W = null;
				_AppTransactionID_W = null;
				_AppReceiverCityID_W = null;
				_AppReceiverCountryID_W = null;
				_AppReceiverStateID_W = null;
				_AppBillReceiverCountryID_W = null;
				_AppBillReceiverStateID_W = null;
				_AppBillReceiverCityID_W = null;
				_AppBankRefNo_W = null;
				_AppPaymentType_W = null;
				_AppCardName_W = null;
				_AppCurrency_W = null;
				_AppShipmentID_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblOrderInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.AppOrderID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblOrderUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblOrderDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.AppOrderID);
			p.SourceColumn = ColumnNames.AppOrderID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.AppOrderID);
			p.SourceColumn = ColumnNames.AppOrderID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderNo);
			p.SourceColumn = ColumnNames.AppOrderNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCustomerID);
			p.SourceColumn = ColumnNames.AppCustomerID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCreatedDate);
			p.SourceColumn = ColumnNames.AppCreatedDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderStatusID);
			p.SourceColumn = ColumnNames.AppOrderStatusID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderAmount);
			p.SourceColumn = ColumnNames.AppOrderAmount;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppOrderStatusChangeDate);
			p.SourceColumn = ColumnNames.AppOrderStatusChangeDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverName);
			p.SourceColumn = ColumnNames.AppReceiverName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverAddress);
			p.SourceColumn = ColumnNames.AppReceiverAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverContactNo1);
			p.SourceColumn = ColumnNames.AppReceiverContactNo1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverContactNo2);
			p.SourceColumn = ColumnNames.AppReceiverContactNo2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPreferedTime);
			p.SourceColumn = ColumnNames.AppPreferedTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppRecevierEmail);
			p.SourceColumn = ColumnNames.AppRecevierEmail;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverName);
			p.SourceColumn = ColumnNames.AppBillReceiverName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverAddress);
			p.SourceColumn = ColumnNames.AppBillReceiverAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverContactNo1);
			p.SourceColumn = ColumnNames.AppBillReceiverContactNo1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverContactNo2);
			p.SourceColumn = ColumnNames.AppBillReceiverContactNo2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillRecevierEmail);
			p.SourceColumn = ColumnNames.AppBillRecevierEmail;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverPIN);
			p.SourceColumn = ColumnNames.AppBillReceiverPIN;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverPIN);
			p.SourceColumn = ColumnNames.AppReceiverPIN;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPaymentMode);
			p.SourceColumn = ColumnNames.AppPaymentMode;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPaymentStatus);
			p.SourceColumn = ColumnNames.AppPaymentStatus;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppTransactionID);
			p.SourceColumn = ColumnNames.AppTransactionID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverCityID);
			p.SourceColumn = ColumnNames.AppReceiverCityID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverCountryID);
			p.SourceColumn = ColumnNames.AppReceiverCountryID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppReceiverStateID);
			p.SourceColumn = ColumnNames.AppReceiverStateID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverCountryID);
			p.SourceColumn = ColumnNames.AppBillReceiverCountryID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverStateID);
			p.SourceColumn = ColumnNames.AppBillReceiverStateID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBillReceiverCityID);
			p.SourceColumn = ColumnNames.AppBillReceiverCityID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBankRefNo);
			p.SourceColumn = ColumnNames.AppBankRefNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppPaymentType);
			p.SourceColumn = ColumnNames.AppPaymentType;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCardName);
			p.SourceColumn = ColumnNames.AppCardName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCurrency);
			p.SourceColumn = ColumnNames.AppCurrency;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppShipmentID);
			p.SourceColumn = ColumnNames.AppShipmentID;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
