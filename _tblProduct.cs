
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace BusinessLayer
{
	public abstract class _tblProduct : SqlClientEntity
	{
		public _tblProduct()
		{
			this.QuerySource = "tblProduct";
			this.MappingName = "tblProduct";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblProductLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int AppProductID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.AppProductID, AppProductID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblProductLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter AppProductID
			{
				get
				{
					return new SqlParameter("@AppProductID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppProductName
			{
				get
				{
					return new SqlParameter("@AppProductName", SqlDbType.VarChar, 100);
				}
			}
			
			public static SqlParameter AppProductCode
			{
				get
				{
					return new SqlParameter("@AppProductCode", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppDescription
			{
				get
				{
					return new SqlParameter("@AppDescription", SqlDbType.VarChar, 2147483647);
				}
			}
			
			public static SqlParameter AppProductTag
			{
				get
				{
					return new SqlParameter("@AppProductTag", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppIsNewArrival
			{
				get
				{
					return new SqlParameter("@AppIsNewArrival", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppIsFeatured
			{
				get
				{
					return new SqlParameter("@AppIsFeatured", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppIsBestSeller
			{
				get
				{
					return new SqlParameter("@AppIsBestSeller", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppCreatedBy
			{
				get
				{
					return new SqlParameter("@AppCreatedBy", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AppCreatedDate
			{
				get
				{
					return new SqlParameter("@AppCreatedDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter AppMetaKeyWord
			{
				get
				{
					return new SqlParameter("@AppMetaKeyWord", SqlDbType.VarChar, 500);
				}
			}
			
			public static SqlParameter AppMetaDescription
			{
				get
				{
					return new SqlParameter("@AppMetaDescription", SqlDbType.VarChar, 500);
				}
			}
			
			public static SqlParameter AppBrowserTitle
			{
				get
				{
					return new SqlParameter("@AppBrowserTitle", SqlDbType.VarChar, 500);
				}
			}
			
			public static SqlParameter AppIsColor
			{
				get
				{
					return new SqlParameter("@AppIsColor", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppIsSize
			{
				get
				{
					return new SqlParameter("@AppIsSize", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppIsActive
			{
				get
				{
					return new SqlParameter("@AppIsActive", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter AppWashCare
			{
				get
				{
					return new SqlParameter("@AppWashCare", SqlDbType.VarChar, 2147483647);
				}
			}
			
			public static SqlParameter AppEstimatedDeliveryDays
			{
				get
				{
					return new SqlParameter("@AppEstimatedDeliveryDays", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter AppWeight
			{
				get
				{
					return new SqlParameter("@AppWeight", SqlDbType.Decimal, 0);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string AppProductID = "appProductID";
            public const string AppProductName = "appProductName";
            public const string AppProductCode = "appProductCode";
            public const string AppDescription = "appDescription";
            public const string AppProductTag = "appProductTag";
            public const string AppIsNewArrival = "appIsNewArrival";
            public const string AppIsFeatured = "appIsFeatured";
            public const string AppIsBestSeller = "appIsBestSeller";
            public const string AppCreatedBy = "appCreatedBy";
            public const string AppCreatedDate = "appCreatedDate";
            public const string AppMetaKeyWord = "appMetaKeyWord";
            public const string AppMetaDescription = "appMetaDescription";
            public const string AppBrowserTitle = "appBrowserTitle";
            public const string AppIsColor = "appIsColor";
            public const string AppIsSize = "appIsSize";
            public const string AppIsActive = "appIsActive";
            public const string AppWashCare = "appWashCare";
            public const string AppEstimatedDeliveryDays = "appEstimatedDeliveryDays";
            public const string AppWeight = "appWeight";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppProductID] = _tblProduct.PropertyNames.AppProductID;
					ht[AppProductName] = _tblProduct.PropertyNames.AppProductName;
					ht[AppProductCode] = _tblProduct.PropertyNames.AppProductCode;
					ht[AppDescription] = _tblProduct.PropertyNames.AppDescription;
					ht[AppProductTag] = _tblProduct.PropertyNames.AppProductTag;
					ht[AppIsNewArrival] = _tblProduct.PropertyNames.AppIsNewArrival;
					ht[AppIsFeatured] = _tblProduct.PropertyNames.AppIsFeatured;
					ht[AppIsBestSeller] = _tblProduct.PropertyNames.AppIsBestSeller;
					ht[AppCreatedBy] = _tblProduct.PropertyNames.AppCreatedBy;
					ht[AppCreatedDate] = _tblProduct.PropertyNames.AppCreatedDate;
					ht[AppMetaKeyWord] = _tblProduct.PropertyNames.AppMetaKeyWord;
					ht[AppMetaDescription] = _tblProduct.PropertyNames.AppMetaDescription;
					ht[AppBrowserTitle] = _tblProduct.PropertyNames.AppBrowserTitle;
					ht[AppIsColor] = _tblProduct.PropertyNames.AppIsColor;
					ht[AppIsSize] = _tblProduct.PropertyNames.AppIsSize;
					ht[AppIsActive] = _tblProduct.PropertyNames.AppIsActive;
					ht[AppWashCare] = _tblProduct.PropertyNames.AppWashCare;
					ht[AppEstimatedDeliveryDays] = _tblProduct.PropertyNames.AppEstimatedDeliveryDays;
					ht[AppWeight] = _tblProduct.PropertyNames.AppWeight;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string AppProductID = "AppProductID";
            public const string AppProductName = "AppProductName";
            public const string AppProductCode = "AppProductCode";
            public const string AppDescription = "AppDescription";
            public const string AppProductTag = "AppProductTag";
            public const string AppIsNewArrival = "AppIsNewArrival";
            public const string AppIsFeatured = "AppIsFeatured";
            public const string AppIsBestSeller = "AppIsBestSeller";
            public const string AppCreatedBy = "AppCreatedBy";
            public const string AppCreatedDate = "AppCreatedDate";
            public const string AppMetaKeyWord = "AppMetaKeyWord";
            public const string AppMetaDescription = "AppMetaDescription";
            public const string AppBrowserTitle = "AppBrowserTitle";
            public const string AppIsColor = "AppIsColor";
            public const string AppIsSize = "AppIsSize";
            public const string AppIsActive = "AppIsActive";
            public const string AppWashCare = "AppWashCare";
            public const string AppEstimatedDeliveryDays = "AppEstimatedDeliveryDays";
            public const string AppWeight = "AppWeight";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[AppProductID] = _tblProduct.ColumnNames.AppProductID;
					ht[AppProductName] = _tblProduct.ColumnNames.AppProductName;
					ht[AppProductCode] = _tblProduct.ColumnNames.AppProductCode;
					ht[AppDescription] = _tblProduct.ColumnNames.AppDescription;
					ht[AppProductTag] = _tblProduct.ColumnNames.AppProductTag;
					ht[AppIsNewArrival] = _tblProduct.ColumnNames.AppIsNewArrival;
					ht[AppIsFeatured] = _tblProduct.ColumnNames.AppIsFeatured;
					ht[AppIsBestSeller] = _tblProduct.ColumnNames.AppIsBestSeller;
					ht[AppCreatedBy] = _tblProduct.ColumnNames.AppCreatedBy;
					ht[AppCreatedDate] = _tblProduct.ColumnNames.AppCreatedDate;
					ht[AppMetaKeyWord] = _tblProduct.ColumnNames.AppMetaKeyWord;
					ht[AppMetaDescription] = _tblProduct.ColumnNames.AppMetaDescription;
					ht[AppBrowserTitle] = _tblProduct.ColumnNames.AppBrowserTitle;
					ht[AppIsColor] = _tblProduct.ColumnNames.AppIsColor;
					ht[AppIsSize] = _tblProduct.ColumnNames.AppIsSize;
					ht[AppIsActive] = _tblProduct.ColumnNames.AppIsActive;
					ht[AppWashCare] = _tblProduct.ColumnNames.AppWashCare;
					ht[AppEstimatedDeliveryDays] = _tblProduct.ColumnNames.AppEstimatedDeliveryDays;
					ht[AppWeight] = _tblProduct.ColumnNames.AppWeight;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string AppProductID = "s_AppProductID";
            public const string AppProductName = "s_AppProductName";
            public const string AppProductCode = "s_AppProductCode";
            public const string AppDescription = "s_AppDescription";
            public const string AppProductTag = "s_AppProductTag";
            public const string AppIsNewArrival = "s_AppIsNewArrival";
            public const string AppIsFeatured = "s_AppIsFeatured";
            public const string AppIsBestSeller = "s_AppIsBestSeller";
            public const string AppCreatedBy = "s_AppCreatedBy";
            public const string AppCreatedDate = "s_AppCreatedDate";
            public const string AppMetaKeyWord = "s_AppMetaKeyWord";
            public const string AppMetaDescription = "s_AppMetaDescription";
            public const string AppBrowserTitle = "s_AppBrowserTitle";
            public const string AppIsColor = "s_AppIsColor";
            public const string AppIsSize = "s_AppIsSize";
            public const string AppIsActive = "s_AppIsActive";
            public const string AppWashCare = "s_AppWashCare";
            public const string AppEstimatedDeliveryDays = "s_AppEstimatedDeliveryDays";
            public const string AppWeight = "s_AppWeight";

		}
		#endregion		
		
		#region Properties
	
		public virtual int AppProductID
	    {
			get
	        {
				return base.Getint(ColumnNames.AppProductID);
			}
			set
	        {
				base.Setint(ColumnNames.AppProductID, value);
			}
		}

		public virtual string AppProductName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppProductName);
			}
			set
	        {
				base.Setstring(ColumnNames.AppProductName, value);
			}
		}

		public virtual string AppProductCode
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppProductCode);
			}
			set
	        {
				base.Setstring(ColumnNames.AppProductCode, value);
			}
		}

		public virtual string AppDescription
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppDescription);
			}
			set
	        {
				base.Setstring(ColumnNames.AppDescription, value);
			}
		}

		public virtual string AppProductTag
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppProductTag);
			}
			set
	        {
				base.Setstring(ColumnNames.AppProductTag, value);
			}
		}

		public virtual bool AppIsNewArrival
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsNewArrival);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsNewArrival, value);
			}
		}

		public virtual bool AppIsFeatured
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsFeatured);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsFeatured, value);
			}
		}

		public virtual bool AppIsBestSeller
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsBestSeller);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsBestSeller, value);
			}
		}

		public virtual int AppCreatedBy
	    {
			get
	        {
				return base.Getint(ColumnNames.AppCreatedBy);
			}
			set
	        {
				base.Setint(ColumnNames.AppCreatedBy, value);
			}
		}

		public virtual DateTime AppCreatedDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AppCreatedDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AppCreatedDate, value);
			}
		}

		public virtual string AppMetaKeyWord
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppMetaKeyWord);
			}
			set
	        {
				base.Setstring(ColumnNames.AppMetaKeyWord, value);
			}
		}

		public virtual string AppMetaDescription
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppMetaDescription);
			}
			set
	        {
				base.Setstring(ColumnNames.AppMetaDescription, value);
			}
		}

		public virtual string AppBrowserTitle
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppBrowserTitle);
			}
			set
	        {
				base.Setstring(ColumnNames.AppBrowserTitle, value);
			}
		}

		public virtual bool AppIsColor
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsColor);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsColor, value);
			}
		}

		public virtual bool AppIsSize
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsSize);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsSize, value);
			}
		}

		public virtual bool AppIsActive
	    {
			get
	        {
				return base.Getbool(ColumnNames.AppIsActive);
			}
			set
	        {
				base.Setbool(ColumnNames.AppIsActive, value);
			}
		}

		public virtual string AppWashCare
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppWashCare);
			}
			set
	        {
				base.Setstring(ColumnNames.AppWashCare, value);
			}
		}

		public virtual string AppEstimatedDeliveryDays
	    {
			get
	        {
				return base.Getstring(ColumnNames.AppEstimatedDeliveryDays);
			}
			set
	        {
				base.Setstring(ColumnNames.AppEstimatedDeliveryDays, value);
			}
		}

		public virtual decimal AppWeight
	    {
			get
	        {
				return base.Getdecimal(ColumnNames.AppWeight);
			}
			set
	        {
				base.Setdecimal(ColumnNames.AppWeight, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_AppProductID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppProductID) ? string.Empty : base.GetintAsString(ColumnNames.AppProductID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppProductID);
				else
					this.AppProductID = base.SetintAsString(ColumnNames.AppProductID, value);
			}
		}

		public virtual string s_AppProductName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppProductName) ? string.Empty : base.GetstringAsString(ColumnNames.AppProductName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppProductName);
				else
					this.AppProductName = base.SetstringAsString(ColumnNames.AppProductName, value);
			}
		}

		public virtual string s_AppProductCode
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppProductCode) ? string.Empty : base.GetstringAsString(ColumnNames.AppProductCode);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppProductCode);
				else
					this.AppProductCode = base.SetstringAsString(ColumnNames.AppProductCode, value);
			}
		}

		public virtual string s_AppDescription
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppDescription) ? string.Empty : base.GetstringAsString(ColumnNames.AppDescription);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppDescription);
				else
					this.AppDescription = base.SetstringAsString(ColumnNames.AppDescription, value);
			}
		}

		public virtual string s_AppProductTag
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppProductTag) ? string.Empty : base.GetstringAsString(ColumnNames.AppProductTag);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppProductTag);
				else
					this.AppProductTag = base.SetstringAsString(ColumnNames.AppProductTag, value);
			}
		}

		public virtual string s_AppIsNewArrival
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsNewArrival) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsNewArrival);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsNewArrival);
				else
					this.AppIsNewArrival = base.SetboolAsString(ColumnNames.AppIsNewArrival, value);
			}
		}

		public virtual string s_AppIsFeatured
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsFeatured) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsFeatured);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsFeatured);
				else
					this.AppIsFeatured = base.SetboolAsString(ColumnNames.AppIsFeatured, value);
			}
		}

		public virtual string s_AppIsBestSeller
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsBestSeller) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsBestSeller);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsBestSeller);
				else
					this.AppIsBestSeller = base.SetboolAsString(ColumnNames.AppIsBestSeller, value);
			}
		}

		public virtual string s_AppCreatedBy
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCreatedBy) ? string.Empty : base.GetintAsString(ColumnNames.AppCreatedBy);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCreatedBy);
				else
					this.AppCreatedBy = base.SetintAsString(ColumnNames.AppCreatedBy, value);
			}
		}

		public virtual string s_AppCreatedDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppCreatedDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.AppCreatedDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppCreatedDate);
				else
					this.AppCreatedDate = base.SetDateTimeAsString(ColumnNames.AppCreatedDate, value);
			}
		}

		public virtual string s_AppMetaKeyWord
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppMetaKeyWord) ? string.Empty : base.GetstringAsString(ColumnNames.AppMetaKeyWord);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppMetaKeyWord);
				else
					this.AppMetaKeyWord = base.SetstringAsString(ColumnNames.AppMetaKeyWord, value);
			}
		}

		public virtual string s_AppMetaDescription
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppMetaDescription) ? string.Empty : base.GetstringAsString(ColumnNames.AppMetaDescription);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppMetaDescription);
				else
					this.AppMetaDescription = base.SetstringAsString(ColumnNames.AppMetaDescription, value);
			}
		}

		public virtual string s_AppBrowserTitle
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppBrowserTitle) ? string.Empty : base.GetstringAsString(ColumnNames.AppBrowserTitle);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppBrowserTitle);
				else
					this.AppBrowserTitle = base.SetstringAsString(ColumnNames.AppBrowserTitle, value);
			}
		}

		public virtual string s_AppIsColor
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsColor) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsColor);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsColor);
				else
					this.AppIsColor = base.SetboolAsString(ColumnNames.AppIsColor, value);
			}
		}

		public virtual string s_AppIsSize
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsSize) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsSize);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsSize);
				else
					this.AppIsSize = base.SetboolAsString(ColumnNames.AppIsSize, value);
			}
		}

		public virtual string s_AppIsActive
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppIsActive) ? string.Empty : base.GetboolAsString(ColumnNames.AppIsActive);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppIsActive);
				else
					this.AppIsActive = base.SetboolAsString(ColumnNames.AppIsActive, value);
			}
		}

		public virtual string s_AppWashCare
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppWashCare) ? string.Empty : base.GetstringAsString(ColumnNames.AppWashCare);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppWashCare);
				else
					this.AppWashCare = base.SetstringAsString(ColumnNames.AppWashCare, value);
			}
		}

		public virtual string s_AppEstimatedDeliveryDays
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppEstimatedDeliveryDays) ? string.Empty : base.GetstringAsString(ColumnNames.AppEstimatedDeliveryDays);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppEstimatedDeliveryDays);
				else
					this.AppEstimatedDeliveryDays = base.SetstringAsString(ColumnNames.AppEstimatedDeliveryDays, value);
			}
		}

		public virtual string s_AppWeight
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AppWeight) ? string.Empty : base.GetdecimalAsString(ColumnNames.AppWeight);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AppWeight);
				else
					this.AppWeight = base.SetdecimalAsString(ColumnNames.AppWeight, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter AppProductID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppProductID, Parameters.AppProductID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppProductName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppProductName, Parameters.AppProductName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppProductCode
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppProductCode, Parameters.AppProductCode);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppDescription
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppDescription, Parameters.AppDescription);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppProductTag
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppProductTag, Parameters.AppProductTag);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsNewArrival
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsNewArrival, Parameters.AppIsNewArrival);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsFeatured
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsFeatured, Parameters.AppIsFeatured);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsBestSeller
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsBestSeller, Parameters.AppIsBestSeller);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCreatedBy
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCreatedBy, Parameters.AppCreatedBy);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppCreatedDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppCreatedDate, Parameters.AppCreatedDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppMetaKeyWord
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppMetaKeyWord, Parameters.AppMetaKeyWord);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppMetaDescription
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppMetaDescription, Parameters.AppMetaDescription);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppBrowserTitle
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppBrowserTitle, Parameters.AppBrowserTitle);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsColor
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsColor, Parameters.AppIsColor);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsSize
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsSize, Parameters.AppIsSize);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppIsActive
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppIsActive, Parameters.AppIsActive);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppWashCare
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppWashCare, Parameters.AppWashCare);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppEstimatedDeliveryDays
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppEstimatedDeliveryDays, Parameters.AppEstimatedDeliveryDays);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AppWeight
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AppWeight, Parameters.AppWeight);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter AppProductID
		    {
				get
		        {
					if(_AppProductID_W == null)
	        	    {
						_AppProductID_W = TearOff.AppProductID;
					}
					return _AppProductID_W;
				}
			}

			public WhereParameter AppProductName
		    {
				get
		        {
					if(_AppProductName_W == null)
	        	    {
						_AppProductName_W = TearOff.AppProductName;
					}
					return _AppProductName_W;
				}
			}

			public WhereParameter AppProductCode
		    {
				get
		        {
					if(_AppProductCode_W == null)
	        	    {
						_AppProductCode_W = TearOff.AppProductCode;
					}
					return _AppProductCode_W;
				}
			}

			public WhereParameter AppDescription
		    {
				get
		        {
					if(_AppDescription_W == null)
	        	    {
						_AppDescription_W = TearOff.AppDescription;
					}
					return _AppDescription_W;
				}
			}

			public WhereParameter AppProductTag
		    {
				get
		        {
					if(_AppProductTag_W == null)
	        	    {
						_AppProductTag_W = TearOff.AppProductTag;
					}
					return _AppProductTag_W;
				}
			}

			public WhereParameter AppIsNewArrival
		    {
				get
		        {
					if(_AppIsNewArrival_W == null)
	        	    {
						_AppIsNewArrival_W = TearOff.AppIsNewArrival;
					}
					return _AppIsNewArrival_W;
				}
			}

			public WhereParameter AppIsFeatured
		    {
				get
		        {
					if(_AppIsFeatured_W == null)
	        	    {
						_AppIsFeatured_W = TearOff.AppIsFeatured;
					}
					return _AppIsFeatured_W;
				}
			}

			public WhereParameter AppIsBestSeller
		    {
				get
		        {
					if(_AppIsBestSeller_W == null)
	        	    {
						_AppIsBestSeller_W = TearOff.AppIsBestSeller;
					}
					return _AppIsBestSeller_W;
				}
			}

			public WhereParameter AppCreatedBy
		    {
				get
		        {
					if(_AppCreatedBy_W == null)
	        	    {
						_AppCreatedBy_W = TearOff.AppCreatedBy;
					}
					return _AppCreatedBy_W;
				}
			}

			public WhereParameter AppCreatedDate
		    {
				get
		        {
					if(_AppCreatedDate_W == null)
	        	    {
						_AppCreatedDate_W = TearOff.AppCreatedDate;
					}
					return _AppCreatedDate_W;
				}
			}

			public WhereParameter AppMetaKeyWord
		    {
				get
		        {
					if(_AppMetaKeyWord_W == null)
	        	    {
						_AppMetaKeyWord_W = TearOff.AppMetaKeyWord;
					}
					return _AppMetaKeyWord_W;
				}
			}

			public WhereParameter AppMetaDescription
		    {
				get
		        {
					if(_AppMetaDescription_W == null)
	        	    {
						_AppMetaDescription_W = TearOff.AppMetaDescription;
					}
					return _AppMetaDescription_W;
				}
			}

			public WhereParameter AppBrowserTitle
		    {
				get
		        {
					if(_AppBrowserTitle_W == null)
	        	    {
						_AppBrowserTitle_W = TearOff.AppBrowserTitle;
					}
					return _AppBrowserTitle_W;
				}
			}

			public WhereParameter AppIsColor
		    {
				get
		        {
					if(_AppIsColor_W == null)
	        	    {
						_AppIsColor_W = TearOff.AppIsColor;
					}
					return _AppIsColor_W;
				}
			}

			public WhereParameter AppIsSize
		    {
				get
		        {
					if(_AppIsSize_W == null)
	        	    {
						_AppIsSize_W = TearOff.AppIsSize;
					}
					return _AppIsSize_W;
				}
			}

			public WhereParameter AppIsActive
		    {
				get
		        {
					if(_AppIsActive_W == null)
	        	    {
						_AppIsActive_W = TearOff.AppIsActive;
					}
					return _AppIsActive_W;
				}
			}

			public WhereParameter AppWashCare
		    {
				get
		        {
					if(_AppWashCare_W == null)
	        	    {
						_AppWashCare_W = TearOff.AppWashCare;
					}
					return _AppWashCare_W;
				}
			}

			public WhereParameter AppEstimatedDeliveryDays
		    {
				get
		        {
					if(_AppEstimatedDeliveryDays_W == null)
	        	    {
						_AppEstimatedDeliveryDays_W = TearOff.AppEstimatedDeliveryDays;
					}
					return _AppEstimatedDeliveryDays_W;
				}
			}

			public WhereParameter AppWeight
		    {
				get
		        {
					if(_AppWeight_W == null)
	        	    {
						_AppWeight_W = TearOff.AppWeight;
					}
					return _AppWeight_W;
				}
			}

			private WhereParameter _AppProductID_W = null;
			private WhereParameter _AppProductName_W = null;
			private WhereParameter _AppProductCode_W = null;
			private WhereParameter _AppDescription_W = null;
			private WhereParameter _AppProductTag_W = null;
			private WhereParameter _AppIsNewArrival_W = null;
			private WhereParameter _AppIsFeatured_W = null;
			private WhereParameter _AppIsBestSeller_W = null;
			private WhereParameter _AppCreatedBy_W = null;
			private WhereParameter _AppCreatedDate_W = null;
			private WhereParameter _AppMetaKeyWord_W = null;
			private WhereParameter _AppMetaDescription_W = null;
			private WhereParameter _AppBrowserTitle_W = null;
			private WhereParameter _AppIsColor_W = null;
			private WhereParameter _AppIsSize_W = null;
			private WhereParameter _AppIsActive_W = null;
			private WhereParameter _AppWashCare_W = null;
			private WhereParameter _AppEstimatedDeliveryDays_W = null;
			private WhereParameter _AppWeight_W = null;

			public void WhereClauseReset()
			{
				_AppProductID_W = null;
				_AppProductName_W = null;
				_AppProductCode_W = null;
				_AppDescription_W = null;
				_AppProductTag_W = null;
				_AppIsNewArrival_W = null;
				_AppIsFeatured_W = null;
				_AppIsBestSeller_W = null;
				_AppCreatedBy_W = null;
				_AppCreatedDate_W = null;
				_AppMetaKeyWord_W = null;
				_AppMetaDescription_W = null;
				_AppBrowserTitle_W = null;
				_AppIsColor_W = null;
				_AppIsSize_W = null;
				_AppIsActive_W = null;
				_AppWashCare_W = null;
				_AppEstimatedDeliveryDays_W = null;
				_AppWeight_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter AppProductID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppProductID, Parameters.AppProductID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppProductName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppProductName, Parameters.AppProductName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppProductCode
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppProductCode, Parameters.AppProductCode);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppDescription
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppDescription, Parameters.AppDescription);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppProductTag
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppProductTag, Parameters.AppProductTag);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsNewArrival
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsNewArrival, Parameters.AppIsNewArrival);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsFeatured
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsFeatured, Parameters.AppIsFeatured);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsBestSeller
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsBestSeller, Parameters.AppIsBestSeller);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCreatedBy
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCreatedBy, Parameters.AppCreatedBy);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppCreatedDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppCreatedDate, Parameters.AppCreatedDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppMetaKeyWord
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppMetaKeyWord, Parameters.AppMetaKeyWord);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppMetaDescription
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppMetaDescription, Parameters.AppMetaDescription);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppBrowserTitle
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppBrowserTitle, Parameters.AppBrowserTitle);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsColor
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsColor, Parameters.AppIsColor);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsSize
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsSize, Parameters.AppIsSize);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppIsActive
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppIsActive, Parameters.AppIsActive);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppWashCare
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppWashCare, Parameters.AppWashCare);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppEstimatedDeliveryDays
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppEstimatedDeliveryDays, Parameters.AppEstimatedDeliveryDays);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AppWeight
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AppWeight, Parameters.AppWeight);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter AppProductID
		    {
				get
		        {
					if(_AppProductID_W == null)
	        	    {
						_AppProductID_W = TearOff.AppProductID;
					}
					return _AppProductID_W;
				}
			}

			public AggregateParameter AppProductName
		    {
				get
		        {
					if(_AppProductName_W == null)
	        	    {
						_AppProductName_W = TearOff.AppProductName;
					}
					return _AppProductName_W;
				}
			}

			public AggregateParameter AppProductCode
		    {
				get
		        {
					if(_AppProductCode_W == null)
	        	    {
						_AppProductCode_W = TearOff.AppProductCode;
					}
					return _AppProductCode_W;
				}
			}

			public AggregateParameter AppDescription
		    {
				get
		        {
					if(_AppDescription_W == null)
	        	    {
						_AppDescription_W = TearOff.AppDescription;
					}
					return _AppDescription_W;
				}
			}

			public AggregateParameter AppProductTag
		    {
				get
		        {
					if(_AppProductTag_W == null)
	        	    {
						_AppProductTag_W = TearOff.AppProductTag;
					}
					return _AppProductTag_W;
				}
			}

			public AggregateParameter AppIsNewArrival
		    {
				get
		        {
					if(_AppIsNewArrival_W == null)
	        	    {
						_AppIsNewArrival_W = TearOff.AppIsNewArrival;
					}
					return _AppIsNewArrival_W;
				}
			}

			public AggregateParameter AppIsFeatured
		    {
				get
		        {
					if(_AppIsFeatured_W == null)
	        	    {
						_AppIsFeatured_W = TearOff.AppIsFeatured;
					}
					return _AppIsFeatured_W;
				}
			}

			public AggregateParameter AppIsBestSeller
		    {
				get
		        {
					if(_AppIsBestSeller_W == null)
	        	    {
						_AppIsBestSeller_W = TearOff.AppIsBestSeller;
					}
					return _AppIsBestSeller_W;
				}
			}

			public AggregateParameter AppCreatedBy
		    {
				get
		        {
					if(_AppCreatedBy_W == null)
	        	    {
						_AppCreatedBy_W = TearOff.AppCreatedBy;
					}
					return _AppCreatedBy_W;
				}
			}

			public AggregateParameter AppCreatedDate
		    {
				get
		        {
					if(_AppCreatedDate_W == null)
	        	    {
						_AppCreatedDate_W = TearOff.AppCreatedDate;
					}
					return _AppCreatedDate_W;
				}
			}

			public AggregateParameter AppMetaKeyWord
		    {
				get
		        {
					if(_AppMetaKeyWord_W == null)
	        	    {
						_AppMetaKeyWord_W = TearOff.AppMetaKeyWord;
					}
					return _AppMetaKeyWord_W;
				}
			}

			public AggregateParameter AppMetaDescription
		    {
				get
		        {
					if(_AppMetaDescription_W == null)
	        	    {
						_AppMetaDescription_W = TearOff.AppMetaDescription;
					}
					return _AppMetaDescription_W;
				}
			}

			public AggregateParameter AppBrowserTitle
		    {
				get
		        {
					if(_AppBrowserTitle_W == null)
	        	    {
						_AppBrowserTitle_W = TearOff.AppBrowserTitle;
					}
					return _AppBrowserTitle_W;
				}
			}

			public AggregateParameter AppIsColor
		    {
				get
		        {
					if(_AppIsColor_W == null)
	        	    {
						_AppIsColor_W = TearOff.AppIsColor;
					}
					return _AppIsColor_W;
				}
			}

			public AggregateParameter AppIsSize
		    {
				get
		        {
					if(_AppIsSize_W == null)
	        	    {
						_AppIsSize_W = TearOff.AppIsSize;
					}
					return _AppIsSize_W;
				}
			}

			public AggregateParameter AppIsActive
		    {
				get
		        {
					if(_AppIsActive_W == null)
	        	    {
						_AppIsActive_W = TearOff.AppIsActive;
					}
					return _AppIsActive_W;
				}
			}

			public AggregateParameter AppWashCare
		    {
				get
		        {
					if(_AppWashCare_W == null)
	        	    {
						_AppWashCare_W = TearOff.AppWashCare;
					}
					return _AppWashCare_W;
				}
			}

			public AggregateParameter AppEstimatedDeliveryDays
		    {
				get
		        {
					if(_AppEstimatedDeliveryDays_W == null)
	        	    {
						_AppEstimatedDeliveryDays_W = TearOff.AppEstimatedDeliveryDays;
					}
					return _AppEstimatedDeliveryDays_W;
				}
			}

			public AggregateParameter AppWeight
		    {
				get
		        {
					if(_AppWeight_W == null)
	        	    {
						_AppWeight_W = TearOff.AppWeight;
					}
					return _AppWeight_W;
				}
			}

			private AggregateParameter _AppProductID_W = null;
			private AggregateParameter _AppProductName_W = null;
			private AggregateParameter _AppProductCode_W = null;
			private AggregateParameter _AppDescription_W = null;
			private AggregateParameter _AppProductTag_W = null;
			private AggregateParameter _AppIsNewArrival_W = null;
			private AggregateParameter _AppIsFeatured_W = null;
			private AggregateParameter _AppIsBestSeller_W = null;
			private AggregateParameter _AppCreatedBy_W = null;
			private AggregateParameter _AppCreatedDate_W = null;
			private AggregateParameter _AppMetaKeyWord_W = null;
			private AggregateParameter _AppMetaDescription_W = null;
			private AggregateParameter _AppBrowserTitle_W = null;
			private AggregateParameter _AppIsColor_W = null;
			private AggregateParameter _AppIsSize_W = null;
			private AggregateParameter _AppIsActive_W = null;
			private AggregateParameter _AppWashCare_W = null;
			private AggregateParameter _AppEstimatedDeliveryDays_W = null;
			private AggregateParameter _AppWeight_W = null;

			public void AggregateClauseReset()
			{
				_AppProductID_W = null;
				_AppProductName_W = null;
				_AppProductCode_W = null;
				_AppDescription_W = null;
				_AppProductTag_W = null;
				_AppIsNewArrival_W = null;
				_AppIsFeatured_W = null;
				_AppIsBestSeller_W = null;
				_AppCreatedBy_W = null;
				_AppCreatedDate_W = null;
				_AppMetaKeyWord_W = null;
				_AppMetaDescription_W = null;
				_AppBrowserTitle_W = null;
				_AppIsColor_W = null;
				_AppIsSize_W = null;
				_AppIsActive_W = null;
				_AppWashCare_W = null;
				_AppEstimatedDeliveryDays_W = null;
				_AppWeight_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblProductInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.AppProductID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblProductUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblProductDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.AppProductID);
			p.SourceColumn = ColumnNames.AppProductID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.AppProductID);
			p.SourceColumn = ColumnNames.AppProductID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppProductName);
			p.SourceColumn = ColumnNames.AppProductName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppProductCode);
			p.SourceColumn = ColumnNames.AppProductCode;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppDescription);
			p.SourceColumn = ColumnNames.AppDescription;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppProductTag);
			p.SourceColumn = ColumnNames.AppProductTag;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsNewArrival);
			p.SourceColumn = ColumnNames.AppIsNewArrival;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsFeatured);
			p.SourceColumn = ColumnNames.AppIsFeatured;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsBestSeller);
			p.SourceColumn = ColumnNames.AppIsBestSeller;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCreatedBy);
			p.SourceColumn = ColumnNames.AppCreatedBy;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppCreatedDate);
			p.SourceColumn = ColumnNames.AppCreatedDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppMetaKeyWord);
			p.SourceColumn = ColumnNames.AppMetaKeyWord;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppMetaDescription);
			p.SourceColumn = ColumnNames.AppMetaDescription;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppBrowserTitle);
			p.SourceColumn = ColumnNames.AppBrowserTitle;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsColor);
			p.SourceColumn = ColumnNames.AppIsColor;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsSize);
			p.SourceColumn = ColumnNames.AppIsSize;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppIsActive);
			p.SourceColumn = ColumnNames.AppIsActive;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppWashCare);
			p.SourceColumn = ColumnNames.AppWashCare;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppEstimatedDeliveryDays);
			p.SourceColumn = ColumnNames.AppEstimatedDeliveryDays;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AppWeight);
			p.SourceColumn = ColumnNames.AppWeight;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
